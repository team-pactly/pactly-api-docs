{
  "openapi": "3.0.0",
  "info": {
    "title": "Pactly Public API",
    "description": "The Pactly Public API provides programmatic access to contract lifecycle management capabilities, enabling integration with your existing systems. Key features include:\n\n• **Contract Management**: Create, retrieve, update, and search contracts across your organization\n• **Template Operations**: Access and manage contract templates for consistent document generation\n• **Document Generation**: Generate contracts from templates with dynamic variable substitution\n• **Text Extraction**: Extract and analyze text content from contracts and documents\n• **Workflow Automation**: Trigger workflows and track contract lifecycle events\n\nThe API follows RESTful principles and returns JSON responses. All endpoints require authentication via API key.",
    "termsOfService": "https://www.pactly.com/terms",
    "contact": {
      "name": "Pactly",
      "url": "https://www.pactly.com",
      "email": "developers@pactly.com"
    },
    "version": "0.2.0",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "https://api.pactly.ai/"
    },
    {
      "url": "https://staging-api.pactly.com/"
    },
    {
      "url": "https://api-uat.pactly.com/"
    }
  ],
  "externalDocs": {
    "url": "https://www.pactly.com/api",
    "description": "Find more information about Pactly API capabilities, authentication, and best practices"
  },
  "tags": [
    {
      "name": "Contracts",
      "description": "Operations related to contract management including creation, retrieval, updates, and text extraction"
    },
    {
      "name": "Templates",
      "description": "Manage contract templates that serve as the foundation for generating new contracts"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "components": {
    "schemas": {
      "accountstat": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/accountstat-without-required-constraint"
          }
        ]
      },
      "accountstat-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **AccountStat**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "objectId": {},
          "type": {
            "type": "string"
          },
          "data": {
            "description": "The data for the statistic"
          }
        }
      },
      "analytics": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/analytics-without-required-constraint"
          },
          {
            "required": [
              "key",
              "data"
            ]
          }
        ]
      },
      "analytics-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Analytics**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "key": {
            "type": "string",
            "description": "What the analytics data is for e.g. history",
            "example": "history"
          },
          "data": {
            "type": "string",
            "description": "Array of objects.",
            "example": "[{}, {}, ...]"
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "apikey": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/apikey-without-required-constraint"
          },
          {
            "required": [
              "key",
              "name"
            ]
          }
        ]
      },
      "apikey-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ApiKey**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "key": {
            "type": "string",
            "description": "The API key",
            "maxLength": 64,
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "description": "A descriptive name for the API key",
            "example": "Production Server Key",
            "maxLength": 255
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "Whether the API key is active or not",
            "example": true
          },
          "lastUsedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last time this API key was used"
          },
          "keyPrefix": {
            "type": "string",
            "description": "First 8 characters of the key for identification",
            "maxLength": 8
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "User who created this API key JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "approval": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/approval-without-required-constraint"
          },
          {
            "required": [
              "status"
            ]
          }
        ]
      },
      "approval-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Approval**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "approved",
              "rejected"
            ]
          },
          "completedAt": {
            "type": "string",
            "format": "date"
          },
          "templatecontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "playbookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          },
          "externalcontract": {
            "description": "JSON dictionary representing the **externalcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalcontract"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "approvalrequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/approvalrequest-without-required-constraint"
          },
          {
            "required": [
              "status"
            ]
          }
        ]
      },
      "approvalrequest-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ApprovalRequest**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "status": {
            "type": "string",
            "description": "rejected | approved - The status of the approval request."
          },
          "completedAt": {
            "type": "string",
            "format": "date",
            "description": "The date the approval request was completed"
          },
          "valid": {
            "type": "boolean",
            "default": true,
            "example": true
          },
          "message": {
            "type": "string",
            "description": "The message for the approval request"
          },
          "approval": {
            "description": "The overall state of the approval request i.e. can have many approvalrequest. JSON dictionary representing the **approval** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/approval"
              }
            ]
          },
          "templatecontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "playbookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          },
          "externalcontract": {
            "description": "JSON dictionary representing the **externalcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalcontract"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "The user who needs to respond to the approval request. JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "authorization": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/authorization-without-required-constraint"
          }
        ]
      },
      "authorization-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Authorization**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "resourceId": {
            "type": "string",
            "description": "Id of the resource"
          },
          "resourceModelName": {
            "type": "string",
            "description": "Model name of the resource e.g. \"templatecontract\""
          },
          "email": {
            "type": "string",
            "description": "This one is set if the authorization is set on email vs user"
          },
          "authorizee": {
            "description": "User who was authorized to access resourceId JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "user": {
            "description": "User who created the authorization JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "Company in which the authorization happened JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "category": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/category-without-required-constraint"
          },
          {
            "required": [
              "label"
            ]
          }
        ]
      },
      "category-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Category**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "label": {
            "type": "string",
            "description": "The label for the category"
          },
          "abbreviation": {
            "type": "string",
            "default": "",
            "description": "The abbreviation for the category"
          },
          "description": {
            "type": "string",
            "description": "The description for the category"
          },
          "isDefault": {
            "type": "boolean",
            "default": false,
            "description": "Whether the category is the default category i.e. shown to all companies"
          },
          "company": {
            "description": "The company the category belongs to JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "The user who created the category JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "chatattachment": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/chatattachment-without-required-constraint"
          },
          {
            "required": [
              "fileName",
              "fileKey",
              "fileSize",
              "fileType",
              "sessionId",
              "user",
              "company"
            ]
          }
        ]
      },
      "chatattachment-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ChatAttachment**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "fileName": {
            "type": "string",
            "description": "Original filename of the uploaded file"
          },
          "fileKey": {
            "type": "string",
            "description": "S3 key or file path for the stored file"
          },
          "fileSize": {
            "type": "number",
            "format": "double",
            "description": "Size of the file in bytes"
          },
          "fileType": {
            "type": "string",
            "description": "MIME type or file extension"
          },
          "extractedText": {
            "type": "string",
            "description": "Extracted text content from the file for AI context"
          },
          "sessionId": {
            "type": "string",
            "description": "Chat session identifier"
          },
          "messageId": {
            "type": "string",
            "description": "Optional link to specific message in the chat"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when this attachment should be auto-deleted"
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "clause": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/clause-without-required-constraint"
          },
          {
            "required": [
              "title",
              "text",
              "html"
            ]
          }
        ]
      },
      "clause-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Clause**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "title": {
            "type": "string",
            "description": "Clause title",
            "maxLength": 256
          },
          "text": {
            "type": "string",
            "description": "The text of the clause"
          },
          "html": {
            "type": "string",
            "description": "The html of the clause"
          },
          "tags": {
            "type": "array",
            "items": {},
            "default": [],
            "description": "The tags for the clause",
            "example": []
          },
          "isConditional": {
            "type": "boolean",
            "default": false,
            "description": "DEPRECATED: Not in use, should be removed"
          },
          "user": {
            "description": "The user who created the clause JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "group": {
            "description": "JSON dictionary representing the **group** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/group"
              }
            ]
          }
        }
      },
      "company": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/company-without-required-constraint"
          },
          {
            "required": [
              "name"
            ]
          }
        ]
      },
      "company-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Company**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "description": "Full legal name of the company",
            "example": "Pactly Private Limited",
            "maxLength": 120
          },
          "seq": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Sequential number of company on the platform",
            "uniqueItems": true
          },
          "vatId": {
            "type": "string",
            "description": "Tax id / company registration",
            "example": "UEN231235020",
            "maxLength": 120
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the company",
            "example": "+64 8479 3630",
            "maxLength": 120
          },
          "country": {
            "type": "object",
            "properties": {
              "name": {
                "example": "Sweden",
                "type": "string"
              },
              "code": {
                "example": "SWE",
                "type": "string"
              }
            },
            "description": "Country code and name",
            "example": {
              "name": "Sweden",
              "code": "SWE"
            }
          },
          "employeeCount": {
            "type": "string",
            "default": "",
            "description": "Range for number of employees",
            "example": "1-5"
          },
          "logoUrl": {
            "type": "string",
            "default": "",
            "description": "Url to the company logo image.",
            "example": "https://example.com/logo.png"
          },
          "subscription": {
            "type": "object",
            "properties": {
              "planId": {
                "example": "pactly-enterprise",
                "type": "string"
              },
              "startDate": {
                "type": "object",
                "properties": {}
              },
              "endDate": {
                "type": "object",
                "properties": {}
              },
              "currency": {
                "example": "sgd",
                "type": "string"
              },
              "billingCycle": {
                "example": "annual",
                "type": "string"
              },
              "remarks": {
                "example": "",
                "type": "string"
              },
              "disableGuides": {
                "example": false,
                "type": "boolean"
              },
              "capabilities": {
                "example": {
                  "generation": true,
                  "checklists": false,
                  "workflows": true,
                  "contractStatus": true,
                  "integrations": true,
                  "playbooks": true,
                  "chatSupport": true,
                  "contractingHub": false,
                  "signwell": true,
                  "experimental": false,
                  "actionRequired": false,
                  "liteRole": false,
                  "sanctionsCheck": false
                },
                "type": "object",
                "properties": {
                  "generation": {
                    "example": true,
                    "type": "boolean"
                  },
                  "checklists": {
                    "example": false,
                    "type": "boolean"
                  },
                  "workflows": {
                    "example": true,
                    "type": "boolean"
                  },
                  "contractStatus": {
                    "example": true,
                    "type": "boolean"
                  },
                  "integrations": {
                    "example": true,
                    "type": "boolean"
                  },
                  "playbooks": {
                    "example": true,
                    "type": "boolean"
                  },
                  "chatSupport": {
                    "example": true,
                    "type": "boolean"
                  },
                  "contractingHub": {
                    "example": false,
                    "type": "boolean"
                  },
                  "signwell": {
                    "example": true,
                    "type": "boolean"
                  },
                  "experimental": {
                    "example": false,
                    "type": "boolean"
                  },
                  "actionRequired": {
                    "example": false,
                    "type": "boolean"
                  },
                  "liteRole": {
                    "example": false,
                    "type": "boolean"
                  },
                  "sanctionsCheck": {
                    "example": false,
                    "type": "boolean"
                  }
                }
              },
              "usage": {
                "example": {
                  "template": {
                    "limit": 5,
                    "count": 0
                  },
                  "user": {
                    "limit": 10,
                    "count": 1
                  },
                  "liteUser": {
                    "limit": 0,
                    "count": 0
                  },
                  "playbook": {
                    "limit": 5,
                    "count": 0
                  },
                  "contract": {
                    "limit": 30,
                    "count": 0
                  },
                  "esignature": {
                    "limit": 30,
                    "count": 0
                  },
                  "sanctionsApi": {
                    "limit": 100,
                    "count": 0
                  }
                },
                "type": "object",
                "properties": {
                  "template": {
                    "example": {
                      "limit": 5,
                      "count": 0
                    },
                    "type": "object",
                    "properties": {
                      "limit": {
                        "example": 5,
                        "type": "integer",
                        "format": "int64"
                      },
                      "count": {
                        "example": 0,
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  },
                  "user": {
                    "example": {
                      "limit": 10,
                      "count": 1
                    },
                    "type": "object",
                    "properties": {
                      "limit": {
                        "example": 10,
                        "type": "integer",
                        "format": "int64"
                      },
                      "count": {
                        "example": 1,
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  },
                  "liteUser": {
                    "example": {
                      "limit": 0,
                      "count": 0
                    },
                    "type": "object",
                    "properties": {
                      "limit": {
                        "example": 0,
                        "type": "integer",
                        "format": "int64"
                      },
                      "count": {
                        "example": 0,
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  },
                  "playbook": {
                    "example": {
                      "limit": 5,
                      "count": 0
                    },
                    "type": "object",
                    "properties": {
                      "limit": {
                        "example": 5,
                        "type": "integer",
                        "format": "int64"
                      },
                      "count": {
                        "example": 0,
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  },
                  "contract": {
                    "example": {
                      "limit": 30,
                      "count": 0
                    },
                    "type": "object",
                    "properties": {
                      "limit": {
                        "example": 30,
                        "type": "integer",
                        "format": "int64"
                      },
                      "count": {
                        "example": 0,
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  },
                  "esignature": {
                    "example": {
                      "limit": 30,
                      "count": 0
                    },
                    "type": "object",
                    "properties": {
                      "limit": {
                        "example": 30,
                        "type": "integer",
                        "format": "int64"
                      },
                      "count": {
                        "example": 0,
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  },
                  "sanctionsApi": {
                    "example": {
                      "limit": 100,
                      "count": 0
                    },
                    "type": "object",
                    "properties": {
                      "limit": {
                        "example": 100,
                        "type": "integer",
                        "format": "int64"
                      },
                      "count": {
                        "example": 0,
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            },
            "default": {
              "planId": "pactly-enterprise",
              "currency": "sgd",
              "billingCycle": "annual",
              "remarks": "",
              "disableGuides": false,
              "capabilities": {
                "generation": true,
                "checklists": false,
                "workflows": true,
                "contractStatus": true,
                "integrations": true,
                "playbooks": true,
                "chatSupport": true,
                "contractingHub": false,
                "signwell": true,
                "experimental": false,
                "actionRequired": false,
                "liteRole": false,
                "sanctionsCheck": false
              },
              "usage": {
                "template": {
                  "limit": 5,
                  "count": 0
                },
                "user": {
                  "limit": 10,
                  "count": 1
                },
                "liteUser": {
                  "limit": 0,
                  "count": 0
                },
                "playbook": {
                  "limit": 5,
                  "count": 0
                },
                "contract": {
                  "limit": 30,
                  "count": 0
                },
                "esignature": {
                  "limit": 30,
                  "count": 0
                },
                "sanctionsApi": {
                  "limit": 100,
                  "count": 0
                }
              }
            },
            "description": "Subscription details for the company",
            "example": {
              "planId": "pactly-enterprise",
              "currency": "sgd",
              "billingCycle": "annual",
              "remarks": "",
              "disableGuides": false,
              "capabilities": {
                "generation": true,
                "checklists": false,
                "workflows": true,
                "contractStatus": true,
                "integrations": true,
                "playbooks": true,
                "chatSupport": true,
                "contractingHub": false,
                "signwell": true,
                "experimental": false,
                "actionRequired": false,
                "liteRole": false,
                "sanctionsCheck": false
              },
              "usage": {
                "template": {
                  "limit": 5,
                  "count": 0
                },
                "user": {
                  "limit": 10,
                  "count": 1
                },
                "liteUser": {
                  "limit": 0,
                  "count": 0
                },
                "playbook": {
                  "limit": 5,
                  "count": 0
                },
                "contract": {
                  "limit": 30,
                  "count": 0
                },
                "esignature": {
                  "limit": 30,
                  "count": 0
                },
                "sanctionsApi": {
                  "limit": 100,
                  "count": 0
                }
              }
            }
          },
          "maintenanceMode": {
            "type": "object",
            "properties": {
              "enabled": {
                "example": false,
                "type": "boolean"
              },
              "loginBlock": {
                "example": false,
                "type": "boolean"
              },
              "loginBlockMessage": {
                "example": "",
                "type": "string"
              },
              "bannerEnabled": {
                "example": true,
                "type": "boolean"
              },
              "bannerMessage": {
                "example": "",
                "type": "string"
              },
              "formSubmissionBlock": {
                "example": false,
                "type": "boolean"
              }
            },
            "default": {
              "enabled": false,
              "loginBlock": false,
              "loginBlockMessage": "",
              "bannerEnabled": true,
              "bannerMessage": "",
              "formSubmissionBlock": false
            },
            "description": "Settings for maintenance mode",
            "example": {
              "enabled": false,
              "loginBlock": false,
              "loginBlockMessage": "",
              "bannerEnabled": true,
              "bannerMessage": "",
              "formSubmissionBlock": false
            }
          },
          "accountHub": {
            "type": "object",
            "properties": {
              "enabledForRoles": {
                "example": [],
                "type": "array",
                "items": {}
              },
              "url": {
                "example": "",
                "type": "string"
              }
            },
            "default": {
              "enabledForRoles": [],
              "url": ""
            },
            "description": "Account hub settings for the company",
            "example": {
              "enabledForRoles": [],
              "url": ""
            }
          },
          "emailSettings": {
            "type": "object",
            "properties": {
              "overrideLogo": {
                "example": false,
                "type": "boolean"
              },
              "senderNameOverride": {
                "example": "",
                "type": "string"
              },
              "extractEmailInAttachments": {
                "example": false,
                "type": "boolean"
              }
            },
            "default": {
              "overrideLogo": false,
              "senderNameOverride": "",
              "extractEmailInAttachments": false
            },
            "description": "Email settings for the company",
            "example": {
              "overrideLogo": false,
              "senderNameOverride": "",
              "extractEmailInAttachments": false
            }
          },
          "hubSettings": {
            "type": "object",
            "properties": {
              "overrideLogo": {
                "example": false,
                "type": "boolean"
              },
              "customSubdomain": {
                "example": "",
                "type": "string"
              },
              "generationFormIds": {
                "example": [],
                "type": "array",
                "items": {}
              },
              "playbookFormIds": {
                "example": [],
                "type": "array",
                "items": {}
              }
            },
            "default": {
              "overrideLogo": false,
              "customSubdomain": "",
              "generationFormIds": [],
              "playbookFormIds": []
            },
            "description": "Contracting hub settings for the company",
            "example": {
              "overrideLogo": false,
              "customSubdomain": "",
              "generationFormIds": [],
              "playbookFormIds": []
            }
          },
          "automationSettings": {
            "type": "object",
            "properties": {
              "active": {
                "example": false,
                "type": "boolean"
              },
              "globalContextPrompt": {
                "example": "",
                "type": "string"
              }
            },
            "default": {
              "active": false,
              "globalContextPrompt": ""
            },
            "description": "Settings for AI Automation",
            "example": {
              "active": false,
              "globalContextPrompt": ""
            }
          },
          "recurringNotificationSettings": {
            "type": "object",
            "properties": {
              "maxSubmissions": {
                "example": 3,
                "type": "integer",
                "format": "int64"
              },
              "approval": {
                "example": {
                  "frequency": "weekly"
                },
                "type": "object",
                "properties": {
                  "frequency": {
                    "example": "weekly",
                    "type": "string"
                  }
                }
              },
              "esignature": {
                "example": {
                  "frequency": "weekly"
                },
                "type": "object",
                "properties": {
                  "frequency": {
                    "example": "weekly",
                    "type": "string"
                  }
                }
              }
            },
            "default": {
              "maxSubmissions": 3,
              "approval": {
                "frequency": "weekly"
              },
              "esignature": {
                "frequency": "weekly"
              }
            },
            "description": "Settings for recurring notification",
            "example": {
              "maxSubmissions": 3,
              "approval": {
                "frequency": "weekly"
              },
              "esignature": {
                "frequency": "weekly"
              }
            }
          },
          "actionRequiredSettings": {
            "type": "object",
            "properties": {
              "newEmail": {
                "example": false,
                "type": "boolean"
              },
              "newMessage": {
                "example": false,
                "type": "boolean"
              },
              "contractAssignment": {
                "example": false,
                "type": "boolean"
              }
            },
            "default": {
              "newEmail": false,
              "newMessage": false,
              "contractAssignment": false
            },
            "description": "Settings for action required flags",
            "example": {
              "newEmail": false,
              "newMessage": false,
              "contractAssignment": false
            }
          },
          "roleVisibilitySettings": {
            "type": "object",
            "properties": {
              "hiddenRoles": {
                "example": [],
                "type": "array",
                "items": {}
              }
            },
            "default": {
              "hiddenRoles": []
            },
            "description": "Settings for role visibility in company interface",
            "example": {
              "hiddenRoles": []
            }
          },
          "inactivityTimeout": {
            "type": "number",
            "format": "double",
            "default": 0,
            "description": "Configures timeout to log user out after a period of inactivity in minutes."
          },
          "passwordLoginDisabled": {
            "type": "boolean",
            "default": false,
            "description": "Has the company disabled login with password."
          },
          "samlLoginEnabled": {
            "type": "boolean",
            "default": false,
            "description": "Has the company enabled SAML login."
          },
          "samlIdpDisplayName": {
            "type": "string",
            "default": "",
            "description": "Displayname of the SAML2 identity provider."
          },
          "samlIdpName": {
            "type": "string",
            "default": "",
            "description": "Name of the SAML2 identity provider."
          },
          "samlLoginUrl": {
            "type": "string",
            "default": "",
            "description": "Login url of the SAML2 identity provider."
          },
          "samlLogoutUrl": {
            "type": "string",
            "default": "",
            "description": "Logout url of the SAML2 identity provider."
          },
          "samlRedirectOnLogout": {
            "type": "boolean",
            "default": false,
            "description": "Should the user be redirected on logout."
          },
          "samlIdpCertificate": {
            "type": "string",
            "default": "",
            "description": "Certificate of the SAML2 identity provider."
          },
          "ldapLoginEnabled": {
            "type": "boolean",
            "default": false,
            "description": "Has the company enabled LDAP login."
          },
          "adSyncEnabled": {
            "type": "boolean",
            "default": false,
            "description": "Has the company enalbed syncing of users from AD."
          },
          "adSyncUser": {
            "type": "string",
            "default": "",
            "description": "Username/dn that we use to connect for AD sync."
          },
          "adSyncPassword": {
            "type": "string",
            "default": "",
            "description": "Password that we use to connect for AD sync."
          },
          "adBaseDn": {
            "type": "string",
            "default": "",
            "description": "BaseDN for the ldap sync if required."
          },
          "adSyncMappings": {
            "type": "array",
            "items": {},
            "default": [],
            "description": "Array of mappings of AD roles to Pactly roles.",
            "example": []
          },
          "ldapAddress": {
            "type": "string",
            "default": "",
            "description": "Address of the LDAP server to authenticate against."
          },
          "ldapDomain": {
            "type": "string",
            "default": "",
            "description": "Domain of the company for ldap login."
          },
          "customHostname": {
            "type": "string",
            "default": "",
            "description": "Custom hostname enabling custom login experience"
          },
          "webhookUrl": {
            "type": "string",
            "default": "",
            "description": "Webhook url where webhook calls are posted."
          },
          "contractStatusLabels": {
            "type": "object",
            "properties": {
              "1": {
                "example": {
                  "label": "Draft"
                },
                "type": "object",
                "properties": {
                  "label": {
                    "example": "Draft",
                    "type": "string"
                  }
                }
              },
              "2": {
                "example": {
                  "label": "In Negotiation"
                },
                "type": "object",
                "properties": {
                  "label": {
                    "example": "In Negotiation",
                    "type": "string"
                  }
                }
              },
              "3": {
                "example": {
                  "label": "Pending Approval"
                },
                "type": "object",
                "properties": {
                  "label": {
                    "example": "Pending Approval",
                    "type": "string"
                  }
                }
              },
              "4": {
                "example": {
                  "label": "Pending Signature"
                },
                "type": "object",
                "properties": {
                  "label": {
                    "example": "Pending Signature",
                    "type": "string"
                  }
                }
              },
              "5": {
                "example": {
                  "label": "Executed"
                },
                "type": "object",
                "properties": {
                  "label": {
                    "example": "Executed",
                    "type": "string"
                  }
                }
              },
              "6": {
                "example": {
                  "label": "Terminated"
                },
                "type": "object",
                "properties": {
                  "label": {
                    "example": "Terminated",
                    "type": "string"
                  }
                }
              }
            },
            "default": {
              "1": {
                "label": "Draft"
              },
              "2": {
                "label": "In Negotiation"
              },
              "3": {
                "label": "Pending Approval"
              },
              "4": {
                "label": "Pending Signature"
              },
              "5": {
                "label": "Executed"
              },
              "6": {
                "label": "Terminated"
              }
            },
            "example": {
              "1": {
                "label": "Draft"
              },
              "2": {
                "label": "In Negotiation"
              },
              "3": {
                "label": "Pending Approval"
              },
              "4": {
                "label": "Pending Signature"
              },
              "5": {
                "label": "Executed"
              },
              "6": {
                "label": "Terminated"
              }
            }
          },
          "emailInKey": {
            "type": "string",
            "description": "Email in key for the company \"key[-contracttypekey][-contractref][-env]@emailin.pactly.ai\"",
            "example": "nus",
            "maxLength": 120
          },
          "contractCategories": {
            "description": "Enabled contract categories for the company. Defaults to Master Services Agreement (MSA) Non Disclosure Agreement (NDA)"
          },
          "propertySettings": {
            "type": "object",
            "properties": {
              "default": {
                "example": {
                  "agreement_date": {
                    "miniview": true,
                    "extract": true
                  },
                  "autorenew": {
                    "miniview": true,
                    "extract": true
                  },
                  "dispute_resolution": {
                    "miniview": true,
                    "extract": true
                  },
                  "effective_date": {
                    "miniview": true,
                    "extract": true
                  },
                  "expiration_date": {
                    "miniview": true,
                    "extract": true
                  },
                  "expiration_date_inferred": {
                    "miniview": true,
                    "extract": true
                  },
                  "governing_law": {
                    "miniview": true,
                    "extract": true
                  },
                  "term": {
                    "miniview": true,
                    "extract": true
                  },
                  "assignment": {
                    "miniview": false,
                    "extract": true
                  },
                  "audit_rights": {
                    "miniview": false,
                    "extract": true
                  },
                  "change_of_control": {
                    "miniview": false,
                    "extract": true
                  },
                  "dispute_resolution_clause": {
                    "miniview": false,
                    "extract": true
                  },
                  "governing_law_clause": {
                    "miniview": false,
                    "extract": true
                  },
                  "indemnity": {
                    "miniview": false,
                    "extract": true
                  },
                  "liability_cap": {
                    "miniview": false,
                    "extract": true
                  },
                  "limitation_of_liability": {
                    "miniview": false,
                    "extract": true
                  },
                  "noncompete": {
                    "miniview": false,
                    "extract": true
                  },
                  "noncompete_clause": {
                    "miniview": false,
                    "extract": true
                  },
                  "nonsolicit": {
                    "miniview": false,
                    "extract": true
                  },
                  "nonsolicit_clause": {
                    "miniview": false,
                    "extract": true
                  },
                  "term_in_months": {
                    "miniview": false,
                    "extract": true
                  }
                },
                "type": "object",
                "properties": {
                  "agreement_date": {
                    "example": {
                      "miniview": true,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": true,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "autorenew": {
                    "example": {
                      "miniview": true,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": true,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "dispute_resolution": {
                    "example": {
                      "miniview": true,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": true,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "effective_date": {
                    "example": {
                      "miniview": true,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": true,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "expiration_date": {
                    "example": {
                      "miniview": true,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": true,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "expiration_date_inferred": {
                    "example": {
                      "miniview": true,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": true,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "governing_law": {
                    "example": {
                      "miniview": true,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": true,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "term": {
                    "example": {
                      "miniview": true,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": true,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "assignment": {
                    "example": {
                      "miniview": false,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": false,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "audit_rights": {
                    "example": {
                      "miniview": false,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": false,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "change_of_control": {
                    "example": {
                      "miniview": false,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": false,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "dispute_resolution_clause": {
                    "example": {
                      "miniview": false,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": false,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "governing_law_clause": {
                    "example": {
                      "miniview": false,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": false,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "indemnity": {
                    "example": {
                      "miniview": false,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": false,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "liability_cap": {
                    "example": {
                      "miniview": false,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": false,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "limitation_of_liability": {
                    "example": {
                      "miniview": false,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": false,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "noncompete": {
                    "example": {
                      "miniview": false,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": false,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "noncompete_clause": {
                    "example": {
                      "miniview": false,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": false,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "nonsolicit": {
                    "example": {
                      "miniview": false,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": false,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "nonsolicit_clause": {
                    "example": {
                      "miniview": false,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": false,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "term_in_months": {
                    "example": {
                      "miniview": false,
                      "extract": true
                    },
                    "type": "object",
                    "properties": {
                      "miniview": {
                        "example": false,
                        "type": "boolean"
                      },
                      "extract": {
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            "default": {
              "default": {
                "agreement_date": {
                  "miniview": true,
                  "extract": true
                },
                "autorenew": {
                  "miniview": true,
                  "extract": true
                },
                "dispute_resolution": {
                  "miniview": true,
                  "extract": true
                },
                "effective_date": {
                  "miniview": true,
                  "extract": true
                },
                "expiration_date": {
                  "miniview": true,
                  "extract": true
                },
                "expiration_date_inferred": {
                  "miniview": true,
                  "extract": true
                },
                "governing_law": {
                  "miniview": true,
                  "extract": true
                },
                "term": {
                  "miniview": true,
                  "extract": true
                },
                "assignment": {
                  "miniview": false,
                  "extract": true
                },
                "audit_rights": {
                  "miniview": false,
                  "extract": true
                },
                "change_of_control": {
                  "miniview": false,
                  "extract": true
                },
                "dispute_resolution_clause": {
                  "miniview": false,
                  "extract": true
                },
                "governing_law_clause": {
                  "miniview": false,
                  "extract": true
                },
                "indemnity": {
                  "miniview": false,
                  "extract": true
                },
                "liability_cap": {
                  "miniview": false,
                  "extract": true
                },
                "limitation_of_liability": {
                  "miniview": false,
                  "extract": true
                },
                "noncompete": {
                  "miniview": false,
                  "extract": true
                },
                "noncompete_clause": {
                  "miniview": false,
                  "extract": true
                },
                "nonsolicit": {
                  "miniview": false,
                  "extract": true
                },
                "nonsolicit_clause": {
                  "miniview": false,
                  "extract": true
                },
                "term_in_months": {
                  "miniview": false,
                  "extract": true
                }
              }
            },
            "description": "Settings for contract properties miniview and extraction",
            "example": {
              "default": {
                "agreement_date": {
                  "miniview": true,
                  "extract": true
                },
                "autorenew": {
                  "miniview": true,
                  "extract": true
                },
                "dispute_resolution": {
                  "miniview": true,
                  "extract": true
                },
                "effective_date": {
                  "miniview": true,
                  "extract": true
                },
                "expiration_date": {
                  "miniview": true,
                  "extract": true
                },
                "expiration_date_inferred": {
                  "miniview": true,
                  "extract": true
                },
                "governing_law": {
                  "miniview": true,
                  "extract": true
                },
                "term": {
                  "miniview": true,
                  "extract": true
                },
                "assignment": {
                  "miniview": false,
                  "extract": true
                },
                "audit_rights": {
                  "miniview": false,
                  "extract": true
                },
                "change_of_control": {
                  "miniview": false,
                  "extract": true
                },
                "dispute_resolution_clause": {
                  "miniview": false,
                  "extract": true
                },
                "governing_law_clause": {
                  "miniview": false,
                  "extract": true
                },
                "indemnity": {
                  "miniview": false,
                  "extract": true
                },
                "liability_cap": {
                  "miniview": false,
                  "extract": true
                },
                "limitation_of_liability": {
                  "miniview": false,
                  "extract": true
                },
                "noncompete": {
                  "miniview": false,
                  "extract": true
                },
                "noncompete_clause": {
                  "miniview": false,
                  "extract": true
                },
                "nonsolicit": {
                  "miniview": false,
                  "extract": true
                },
                "nonsolicit_clause": {
                  "miniview": false,
                  "extract": true
                },
                "term_in_months": {
                  "miniview": false,
                  "extract": true
                }
              }
            }
          },
          "signingSettings": {
            "type": "object",
            "properties": {
              "defaultOnUpload": {
                "example": "fullySigned",
                "type": "string"
              },
              "defaultOnEsignature": {
                "example": "fullySigned",
                "type": "string"
              }
            },
            "default": {
              "defaultOnUpload": "fullySigned",
              "defaultOnEsignature": "fullySigned"
            },
            "description": "Settings for contract signing",
            "example": {
              "defaultOnUpload": "fullySigned",
              "defaultOnEsignature": "fullySigned"
            }
          },
          "approvalSettings": {
            "type": "object",
            "properties": {
              "approveLabel": {
                "example": "Approve",
                "type": "string"
              },
              "rejectLabel": {
                "example": "Reject",
                "type": "string"
              },
              "hideRejectButton": {
                "example": false,
                "type": "boolean"
              }
            },
            "default": {
              "approveLabel": "Approve",
              "rejectLabel": "Reject",
              "hideRejectButton": false
            },
            "description": "Settings for contract approval",
            "example": {
              "approveLabel": "Approve",
              "rejectLabel": "Reject",
              "hideRejectButton": false
            }
          },
          "lockedDomains": {
            "description": "List of domains that are locked for the company i.e. cannot be used to sign up on the platform with"
          },
          "lockedDomainMessage": {
            "type": "string",
            "description": "Message to display to the user when they try to sign up with a locked domain"
          },
          "requireIntakeFormForContractCreation": {
            "type": "boolean",
            "default": false,
            "description": "When enabled, team members must use the intake form workflow to create new contracts. Direct document uploads will be disabled."
          },
          "allowFinalizationBypass": {
            "type": "boolean",
            "default": false,
            "description": "When enabled, users can bypass the finalization process and upload signed pdf directly."
          },
          "contractReferenceTokens": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "example": "value",
                      "type": "string"
                    },
                    "label": {
                      "example": "Year",
                      "type": "string"
                    },
                    "id": {
                      "example": "year",
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "example": "value",
                      "type": "string"
                    },
                    "label": {
                      "example": "Incremental 4-digit",
                      "type": "string"
                    },
                    "id": {
                      "example": "4-digit",
                      "type": "string"
                    }
                  }
                }
              ]
            },
            "default": [
              {
                "type": "value",
                "label": "Year",
                "id": "year"
              },
              {
                "type": "value",
                "label": "Incremental 4-digit",
                "id": "4-digit"
              }
            ],
            "description": "Tokens for how to generate contract reference numbers in the company",
            "example": [
              {
                "type": "value",
                "label": "Year",
                "id": "year"
              },
              {
                "type": "value",
                "label": "Incremental 4-digit",
                "id": "4-digit"
              }
            ]
          },
          "contractReferenceCounts": {},
          "canUpdateReference": {
            "type": "boolean",
            "default": true,
            "example": true
          },
          "shouldAbortContracts": {
            "type": "boolean",
            "default": true,
            "example": true
          },
          "abortContractsUnits": {
            "type": "number",
            "format": "double",
            "default": 6,
            "example": 6
          },
          "emailFallback": {
            "type": "string",
            "default": "",
            "description": "Fallback email address for the company to use for notifications"
          },
          "lastSurpassedLimitsNotification": {
            "type": "string",
            "format": "date",
            "default": 0
          },
          "users": {
            "description": "Array of **user**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/user"
            }
          },
          "defaultAdmin": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "contractattachment": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/contractattachment-without-required-constraint"
          }
        ]
      },
      "contractattachment-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ContractAttachment**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "fileName": {
            "type": "string",
            "description": "Name of the file"
          },
          "fileKey": {
            "type": "string",
            "description": "Key of the file in the AWS S3 storage bucket"
          },
          "contractnote": {
            "description": "JSON dictionary representing the **contractnote** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/contractnote"
              }
            ]
          },
          "externalcontract": {
            "description": "JSON dictionary representing the **externalcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalcontract"
              }
            ]
          },
          "playbookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          },
          "templatecontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "formentry": {
            "description": "JSON dictionary representing the **formentry** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/formentry"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "contractelement": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/contractelement-without-required-constraint"
          }
        ]
      },
      "contractelement-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ContractElement**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "description": "Name of the element"
          },
          "key": {
            "type": "string",
            "description": "Key of the element"
          },
          "description": {
            "type": "string",
            "description": "Description of the element"
          },
          "prompt": {
            "type": "string",
            "default": "",
            "description": "Prompt for the element"
          },
          "categories": {
            "description": "Categories of the element (contract category)"
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "contractentrylink": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/contractentrylink-without-required-constraint"
          }
        ]
      },
      "contractentrylink-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ContractEntryLink**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "templatecontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "playbookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          },
          "externalcontract": {
            "description": "JSON dictionary representing the **externalcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalcontract"
              }
            ]
          },
          "formentry": {
            "description": "JSON dictionary representing the **formentry** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/formentry"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "contractlink": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/contractlink-without-required-constraint"
          }
        ]
      },
      "contractlink-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ContractLink**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "originTemplatecontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "originPlaybookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          },
          "originExternalcontract": {
            "description": "JSON dictionary representing the **externalcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalcontract"
              }
            ]
          },
          "targetTemplatecontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "targetPlaybookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          },
          "targetExternalcontract": {
            "description": "JSON dictionary representing the **externalcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalcontract"
              }
            ]
          },
          "type": {
            "type": "string"
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "contractnote": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/contractnote-without-required-constraint"
          },
          {
            "required": [
              "text"
            ]
          }
        ]
      },
      "contractnote-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ContractNote**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "text": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "description": "Either \"contract\" or \"hub\" for now"
          },
          "noteType": {
            "type": "string",
            "default": "note",
            "description": "Either \"note\" or \"message\" for now",
            "example": "note"
          },
          "notifyRecipients": {
            "type": "array",
            "items": {},
            "default": [],
            "description": "List of users to notify when the note is created",
            "example": []
          },
          "linkedEntries": {
            "type": "array",
            "items": {},
            "default": [],
            "description": "List of form entries linked to the note",
            "example": []
          },
          "settings": {
            "type": "object",
            "properties": {
              "includeAttachmentsInEmail": {
                "example": true,
                "type": "boolean"
              },
              "includeContractInEmail": {
                "example": false,
                "type": "boolean"
              },
              "includeSenderInCC": {
                "example": false,
                "type": "boolean"
              },
              "attachedFormSequenceId": {
                "example": null,
                "type": "object",
                "properties": {}
              },
              "attachedFormSequenceRecipients": {
                "example": {},
                "type": "object",
                "properties": {}
              }
            },
            "default": {
              "includeAttachmentsInEmail": true,
              "includeContractInEmail": false,
              "includeSenderInCC": false,
              "attachedFormSequenceId": null,
              "attachedFormSequenceRecipients": {}
            },
            "description": "Additional settings for the note",
            "example": {
              "includeAttachmentsInEmail": true,
              "includeContractInEmail": false,
              "includeSenderInCC": false,
              "attachedFormSequenceId": null,
              "attachedFormSequenceRecipients": {}
            }
          },
          "templatecontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "playbookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          },
          "externalcontract": {
            "description": "JSON dictionary representing the **externalcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalcontract"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "lastUpdatedBy": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "contractpartylink": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/contractpartylink-without-required-constraint"
          }
        ]
      },
      "contractpartylink-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ContractPartyLink**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "templatecontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "playbookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          },
          "externalcontract": {
            "description": "JSON dictionary representing the **externalcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalcontract"
              }
            ]
          },
          "party": {
            "description": "JSON dictionary representing the **party** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/party"
              }
            ]
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Roles for the party in the contract: counterparty, signer, counterparty_representative, our_representative",
            "example": [
              "counterparty"
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "contractproperty": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/contractproperty-without-required-constraint"
          },
          {
            "required": [
              "label",
              "key"
            ]
          }
        ]
      },
      "contractproperty-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ContractProperty**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "label": {
            "type": "string",
            "maxLength": 64
          },
          "description": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "The type of the property as string: \"string\", \"number\", \"boolean\", \"multi-line\", \"list\", \"multi-option\", \"date\", \"duration\", \"party\", \"user\""
          },
          "options": {},
          "isDefault": {
            "type": "boolean",
            "default": false
          },
          "subGroup": {
            "type": "string",
            "description": "The sub-group this property is shown on in property viewer"
          },
          "sortOrder": {
            "type": "number",
            "format": "double",
            "default": 0,
            "description": "The sort order of this property in the property viewer (larger number first)"
          },
          "areOptionsConditional": {
            "type": "boolean",
            "description": "Whether the options of this property are conditional on other properties"
          },
          "parentPropertyKey": {
            "description": "The key of the parent property that this property is conditional on"
          },
          "optionsByValue": {
            "description": "The options of this property, grouped by value of its parent property (used for list properties)"
          },
          "useForSorting": {
            "type": "boolean",
            "default": false,
            "description": "Whether to use this property for sorting on contracts dashboard"
          },
          "predictionPrompt": {
            "type": "string",
            "default": ""
          },
          "company": {
            "description": "The company this property belongs to, for global properties this is null. JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "template": {
            "description": "JSON dictionary representing the **template** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/template"
              }
            ]
          },
          "group": {
            "description": "JSON dictionary representing the **contractpropertygroup** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/contractpropertygroup"
              }
            ]
          },
          "categories": {},
          "parent": {
            "description": "JSON dictionary representing the **contractproperty** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/contractproperty"
              }
            ]
          }
        }
      },
      "contractpropertygroup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/contractpropertygroup-without-required-constraint"
          },
          {
            "required": [
              "label"
            ]
          }
        ]
      },
      "contractpropertygroup-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ContractPropertyGroup**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "label": {
            "type": "string",
            "maxLength": 64
          },
          "isDefault": {
            "type": "boolean",
            "default": false
          },
          "sortOrder": {
            "type": "number",
            "format": "double",
            "default": 0,
            "description": "The sort order of this group in the property viewer (larger number first)"
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "contracttermination": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/contracttermination-without-required-constraint"
          }
        ]
      },
      "contracttermination-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ContractTermination**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "files": {
            "type": "array",
            "items": {},
            "default": [],
            "description": "The attached files associated with the termination",
            "example": []
          },
          "justification": {
            "type": "string",
            "description": "The justification for the termination"
          },
          "previousStatus": {
            "type": "number",
            "format": "double",
            "description": "The status number of the contract before termination"
          },
          "externalcontract": {
            "description": "JSON dictionary representing the **externalcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalcontract"
              }
            ]
          },
          "playbookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          },
          "templatecontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "contractuserlink": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/contractuserlink-without-required-constraint"
          }
        ]
      },
      "contractuserlink-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ContractUserLink**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "templatecontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "playbookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          },
          "externalcontract": {
            "description": "JSON dictionary representing the **externalcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalcontract"
              }
            ]
          },
          "targetUser": {
            "description": "The user who is linked to the contract JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "roles": {},
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "The user who created this link JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "contractview": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/contractview-without-required-constraint"
          },
          {
            "required": [
              "name",
              "filters"
            ]
          }
        ]
      },
      "contractview-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ContractView**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "maxLength": 64
          },
          "filters": {
            "description": "The filters applied to the contracts listing"
          },
          "columns": {
            "description": "The columns displayed in the contracts listing"
          },
          "isDefault": {
            "type": "boolean",
            "default": false,
            "description": "Whether this view is part of global default views"
          },
          "order": {
            "type": "number",
            "format": "double"
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "counter": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/counter-without-required-constraint"
          }
        ]
      },
      "counter-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Counter**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "seq": {
            "type": "number",
            "format": "double",
            "default": 0,
            "description": "Counters for adding numbering to other models."
          }
        }
      },
      "deviationjustification": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/deviationjustification-without-required-constraint"
          },
          {
            "required": [
              "hash",
              "text"
            ]
          }
        ]
      },
      "deviationjustification-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **DeviationJustification**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "hash": {
            "type": "string",
            "description": "The hash of clause the deviation justification is for"
          },
          "text": {
            "type": "string",
            "description": "The text of the deviation justification"
          },
          "templatecontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "docusignenvelope": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/docusignenvelope-without-required-constraint"
          },
          {
            "required": [
              "dsId",
              "status",
              "dsAccountId"
            ]
          }
        ]
      },
      "docusignenvelope-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **DocuSignEnvelope**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "dsId": {
            "type": "string",
            "description": "The DocuSign envelope ID at DocuSign end"
          },
          "status": {
            "type": "string",
            "description": "The DocuSign envelope status"
          },
          "currentStatusDate": {
            "type": "string",
            "format": "date",
            "description": "The date of the last status update"
          },
          "events": {},
          "ccRecipients": {
            "type": "array",
            "items": {},
            "default": [],
            "description": "CC recipients for the envelope",
            "example": []
          },
          "dsAccountId": {
            "type": "string"
          },
          "lastPollDate": {
            "type": "string",
            "format": "date",
            "default": "2025-07-23T16:30:34.256Z",
            "description": "The date of the last poll",
            "example": "2025-07-23T16:30:34.256Z"
          },
          "templatecontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "playbookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          },
          "externalcontract": {
            "description": "JSON dictionary representing the **externalcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalcontract"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "documentsnapshot": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/documentsnapshot-without-required-constraint"
          },
          {
            "required": [
              "paragraphs"
            ]
          }
        ]
      },
      "documentsnapshot-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **DocumentSnapshot**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "paragraphs": {
            "description": "The paragraphs of the document snapshot"
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "playbookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          }
        }
      },
      "emailin": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/emailin-without-required-constraint"
          }
        ]
      },
      "emailin-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **EmailIn**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "sender": {
            "type": "string"
          },
          "recipient": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "subjectEdited": {
            "type": "string",
            "description": "Custom/edited subject title for the email"
          },
          "body": {
            "type": "string"
          },
          "emlFileKey": {
            "type": "string",
            "description": "The key of the email file in S3"
          },
          "attachments": {},
          "templatecontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "playbookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          },
          "externalcontract": {
            "description": "JSON dictionary representing the **externalcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalcontract"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "emailtemplate": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/emailtemplate-without-required-constraint"
          },
          {
            "required": [
              "readableName",
              "name",
              "subject",
              "template"
            ]
          }
        ]
      },
      "emailtemplate-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **EmailTemplate**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "readableName": {
            "type": "string",
            "description": "Readable name of the email template"
          },
          "name": {
            "type": "string",
            "description": "Non-readable name of the email template"
          },
          "description": {
            "type": "string",
            "default": "",
            "description": "Description / usage instruction of the email template"
          },
          "availableFor": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Array of options that this template is available for.",
            "example": [
              "signatureEmailOverride",
              "timelineMessage"
            ]
          },
          "subject": {
            "type": "string",
            "description": "The liquidjs template of the subject line."
          },
          "partials": {
            "description": "Info of available partials for this template."
          },
          "template": {
            "type": "string",
            "description": "The liquidjs template of the email."
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "exportbundle": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/exportbundle-without-required-constraint"
          },
          {
            "required": [
              "name",
              "fileKey",
              "period"
            ]
          }
        ]
      },
      "exportbundle-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ExportBundle**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "fileKey": {
            "type": "string"
          },
          "period": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "complete"
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "externalcontract": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/externalcontract-without-required-constraint"
          },
          {
            "required": [
              "name",
              "fileName",
              "fileKey"
            ]
          }
        ]
      },
      "externalcontract-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ExternalContract**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "description": "Contract name",
            "example": "NDA of the year",
            "maxLength": 256
          },
          "reference": {
            "type": "string",
            "default": "",
            "description": "Contract reference number, format is customizable per company"
          },
          "visibilitySettings": {
            "type": "object",
            "properties": {},
            "default": {},
            "description": "Role based options for contract tabs & timeline",
            "example": {}
          },
          "executedAt": {
            "type": "string",
            "format": "date"
          },
          "executionMethod": {
            "type": "string",
            "default": "",
            "description": "Method used to execute the contract: DocuSign integration, upload..."
          },
          "executedFileKey": {
            "type": "string",
            "default": "",
            "description": "File key of the executed contract, should always be pdf"
          },
          "executedFileName": {
            "type": "string",
            "default": "",
            "description": "File name of the executed contract"
          },
          "contractType": {
            "type": "string",
            "default": "external",
            "description": "Contract type identifier",
            "enum": [
              "external"
            ],
            "example": "external"
          },
          "fileName": {
            "type": "string",
            "description": "File name",
            "example": "xxx-yyy-zzz.doc",
            "maxLength": 256
          },
          "fileKey": {
            "type": "string",
            "description": "File key",
            "example": "xxx-yyy-zzz.doc",
            "maxLength": 256
          },
          "archived": {
            "type": "boolean",
            "default": false,
            "description": "Whether the contract has been archived"
          },
          "htmlFileKey": {
            "type": "string",
            "default": ""
          },
          "status": {
            "type": "number",
            "format": "double",
            "default": 3,
            "example": 3
          },
          "metaData": {
            "description": "Meta data related to the contract."
          },
          "subcategories": {},
          "properties": {},
          "searchString": {
            "type": "string",
            "default": ""
          },
          "deleted": {
            "type": "boolean",
            "default": false
          },
          "aborted": {
            "type": "boolean",
            "default": false
          },
          "lastAbortNotificationDate": {
            "type": "string",
            "format": "date"
          },
          "abortedAt": {
            "type": "string",
            "format": "date"
          },
          "directDownloadToken": {
            "type": "string",
            "description": "Token used for direct download of contract. First letter signifies contract type."
          },
          "signingSettings": {
            "type": "object",
            "properties": {
              "integration": {
                "example": "DocuSign",
                "type": "string"
              },
              "order": {
                "example": "parallel",
                "type": "string"
              },
              "partialSigningEnabled": {
                "example": false,
                "type": "boolean"
              },
              "signers": {
                "example": [
                  {
                    "firstName": "John",
                    "lastName": "Doe",
                    "name": "John Doe",
                    "email": "john@doe.com",
                    "message": "",
                    "sequenceFormId": ""
                  }
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "firstName": {
                      "example": "John",
                      "type": "string"
                    },
                    "lastName": {
                      "example": "Doe",
                      "type": "string"
                    },
                    "name": {
                      "example": "John Doe",
                      "type": "string"
                    },
                    "email": {
                      "example": "john@doe.com",
                      "type": "string"
                    },
                    "message": {
                      "example": "",
                      "type": "string"
                    },
                    "sequenceFormId": {
                      "example": "",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Signing configuration for the contract",
            "example": {
              "integration": "DocuSign",
              "order": "parallel",
              "partialSigningEnabled": false,
              "signers": [
                {
                  "firstName": "John",
                  "lastName": "Doe",
                  "name": "John Doe",
                  "email": "john@doe.com",
                  "message": "",
                  "sequenceFormId": ""
                }
              ]
            }
          },
          "aiSettings": {
            "type": "object",
            "properties": {},
            "default": {},
            "description": "AI model settings",
            "example": {}
          },
          "actionRequiredUsers": {
            "type": "array",
            "items": {},
            "default": [],
            "example": []
          },
          "requester": {
            "description": "User that started the contract request process. JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "creator": {
            "description": "User that created the contract. JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "user": {
            "description": "User that is assigned as the owner of the contract JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "group": {
            "description": "JSON dictionary representing the **group** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/group"
              }
            ]
          },
          "category": {
            "description": "JSON dictionary representing the **category** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/category"
              }
            ]
          }
        }
      },
      "form": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/form-without-required-constraint"
          },
          {
            "required": [
              "title",
              "description"
            ]
          }
        ]
      },
      "form-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Form**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "title": {
            "type": "string",
            "description": "Title of a form.",
            "maxLength": 256
          },
          "description": {
            "type": "string",
            "description": "Description of a form.",
            "maxLength": 1024
          },
          "position": {
            "type": "number",
            "format": "double",
            "default": 0,
            "description": "The position of the form in the list of forms."
          },
          "fields": {
            "description": "The fields of the form"
          },
          "actions": {
            "description": "Actions that get run when form is submitted."
          },
          "deleted": {
            "type": "boolean",
            "default": false
          },
          "enableCurrency": {
            "type": "boolean",
            "default": false
          },
          "settings": {},
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "group": {
            "description": "JSON dictionary representing the **group** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/group"
              }
            ]
          }
        }
      },
      "formaccesskey": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/formaccesskey-without-required-constraint"
          }
        ]
      },
      "formaccesskey-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **FormAccessKey**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "allowMultiple": {
            "type": "boolean",
            "default": false,
            "description": "Whether the key allows multiple submissions or not. If true, the key can be used multiple times."
          },
          "status": {
            "type": "string",
            "default": "active",
            "description": "The status of the key",
            "example": "active"
          },
          "archived": {
            "type": "boolean",
            "default": false
          },
          "form": {
            "description": "JSON dictionary representing the **form** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/form"
              }
            ]
          },
          "initialEntry": {
            "description": "JSON dictionary representing the **formentry** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/formentry"
              }
            ]
          },
          "permalink": {
            "description": "JSON dictionary representing the **formpermalink** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/formpermalink"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "formaction": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/formaction-without-required-constraint"
          }
        ]
      },
      "formaction-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **FormAction**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "type": {
            "type": "string",
            "description": "The type of action can be generate, generate attachment, redirect or create."
          },
          "description": {
            "type": "string"
          },
          "active": {
            "type": "boolean",
            "description": "Whether the action is active or not"
          },
          "condition": {
            "description": "The condition that must be met for this action to be executed"
          },
          "sendToUser": {
            "type": "boolean",
            "description": "Send to form submitters email if this option is checked."
          },
          "sendToEmails": {
            "type": "array",
            "items": {},
            "default": [],
            "description": "Send form result to these additional emails when the form is submitted.",
            "example": []
          },
          "assignContractTo": {
            "description": "To what user the contract should be assigned to. JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "initializePlaybookContract": {
            "type": "boolean",
            "default": false
          },
          "redirectToUrl": {
            "type": "string",
            "default": ""
          },
          "redirectToForm": {
            "description": "JSON dictionary representing the **form** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/form"
              }
            ]
          },
          "fileName": {
            "type": "string",
            "default": ""
          },
          "form": {
            "description": "JSON dictionary representing the **form** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/form"
              }
            ]
          },
          "template": {
            "description": "JSON dictionary representing the **template** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/template"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "formcomment": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/formcomment-without-required-constraint"
          }
        ]
      },
      "formcomment-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **FormComment**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "text": {
            "type": "string"
          },
          "form": {
            "description": "JSON dictionary representing the **form** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/form"
              }
            ]
          },
          "entry": {
            "description": "JSON dictionary representing the **formentry** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/formentry"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "accessKey": {
            "description": "JSON dictionary representing the **formaccesskey** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/formaccesskey"
              }
            ]
          },
          "field": {
            "description": "JSON dictionary representing the **formfield** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/formfield"
              }
            ]
          }
        }
      },
      "formentry": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/formentry-without-required-constraint"
          }
        ]
      },
      "formentry-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **FormEntry**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "title": {
            "type": "string"
          },
          "values": {
            "description": "The values of the form entry"
          },
          "status": {
            "type": "string",
            "description": "Shows the state of the entry, value is either \"pending\" or \"done\""
          },
          "submittedGroups": {},
          "globals": {
            "type": "object",
            "properties": {},
            "default": {},
            "example": {}
          },
          "selectedParties": {
            "type": "object",
            "properties": {},
            "default": {},
            "example": {}
          },
          "deleted": {
            "type": "boolean",
            "default": false
          },
          "archived": {
            "type": "boolean",
            "default": false
          },
          "submittedAt": {
            "type": "string",
            "format": "date"
          },
          "reassignedAt": {
            "type": "string",
            "format": "date",
            "description": "The date the form entry was reassigned"
          },
          "group": {
            "description": "JSON dictionary representing the **group** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/group"
              }
            ]
          },
          "form": {
            "description": "JSON dictionary representing the **form** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/form"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "accessKey": {
            "description": "JSON dictionary representing the **formaccesskey** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/formaccesskey"
              }
            ]
          },
          "formentrysequence": {
            "description": "JSON dictionary representing the **formentrysequence** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/formentrysequence"
              }
            ]
          },
          "reassignedBy": {
            "description": "The user who reassigned this form entry JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "formentrysequence": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/formentrysequence-without-required-constraint"
          }
        ]
      },
      "formentrysequence-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **FormEntrySequence**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "formsequence": {
            "description": "JSON dictionary representing the **formsequence** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/formsequence"
              }
            ]
          },
          "formentries": {},
          "templatecontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "playbookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          },
          "externalcontract": {
            "description": "JSON dictionary representing the **externalcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalcontract"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "sequenceInitiator": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "formfield": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/formfield-without-required-constraint"
          }
        ]
      },
      "formfield-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **FormField**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "position": {
            "type": "number",
            "format": "double",
            "description": "The position of the field in the form"
          },
          "type": {
            "type": "string",
            "description": "One of: 'string', 'number', 'boolean', 'list', 'date', 'duration', 'search', 'file', 'party', 'output','signature', 'createContract', 'requestContract', 'user'",
            "example": "boolean"
          },
          "question": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "alwaysShowNotes": {
            "type": "boolean"
          },
          "links": {},
          "required": {
            "type": "boolean"
          },
          "mappings": {},
          "defaultValue": {},
          "hideInEmails": {
            "type": "boolean",
            "description": "Wether the field should appear in form submission emails."
          },
          "createContractCategoryIds": {
            "description": "Filters the available contract categories for contract creation."
          },
          "createContractCategoryDescriptionOverrides": {
            "description": "Overrides the default description for the contract categories in the dropdown."
          },
          "requestContractCategoryIds": {
            "description": "Filters the available contract categories for contract request."
          },
          "requestContractPropertyIds": {
            "description": "Shows the chosen contract properties for extra context when requesting a contract."
          },
          "outputShownAfterSubmit": {
            "type": "boolean",
            "default": false
          },
          "outputValue": {
            "type": "object",
            "properties": {
              "type": {
                "example": "string",
                "type": "string"
              },
              "value": {
                "example": "",
                "type": "string"
              }
            },
            "default": {
              "type": "string",
              "value": ""
            },
            "description": "The preset value for the output. Is an object { value: \"bla\", type: \"string\" } because it can be of various types. Supported types are string and boolean.",
            "example": {
              "type": "string",
              "value": ""
            }
          },
          "outputMessage": {
            "type": "string",
            "default": ""
          },
          "outputType": {
            "type": "string",
            "default": "",
            "description": "Either success, warning or info"
          },
          "outputLogic": {
            "type": "string",
            "default": ""
          },
          "outputVariableMapping": {},
          "useOutputLogic": {
            "type": "boolean",
            "default": false
          },
          "outputBlockSubmission": {
            "type": "boolean",
            "default": false
          },
          "showPreviousSequenceResult": {
            "type": "boolean",
            "default": false
          },
          "condition": {
            "description": "The condition that must be met for this field to be visible"
          },
          "isConditional": {
            "type": "boolean",
            "default": false
          },
          "durationUnitOptions": {},
          "dateFormat": {
            "type": "string"
          },
          "dateLocked": {
            "type": "boolean",
            "default": false
          },
          "dateDefaultToToday": {
            "type": "boolean",
            "default": false
          },
          "displayLocale": {
            "type": "boolean"
          },
          "listOptions": {},
          "allowMultipleSelection": {
            "type": "boolean",
            "default": false
          },
          "isRichText": {
            "type": "boolean",
            "default": false
          },
          "displayAsRadio": {
            "type": "boolean"
          },
          "fileOptions": {},
          "fileTypes": {},
          "data": {},
          "displaySearch": {
            "type": "boolean"
          },
          "searchOptions": {},
          "partyType": {
            "type": "string"
          },
          "partyAttributes": {},
          "partyIsFormSubmitter": {
            "type": "boolean",
            "description": "If true, the party will be the form submitter and email will be prefilled"
          },
          "partyMapping": {},
          "partyRoles": {
            "type": "array",
            "items": {},
            "default": [],
            "example": []
          },
          "runSanctionsCheck": {
            "type": "boolean",
            "description": "If true, the (party) field will be checked against sanctions list."
          },
          "userFilters": {
            "description": "Filters the available users for the user field."
          },
          "embedMapping": {},
          "useReverseContractproperty": {
            "type": "boolean"
          },
          "reverseContractpropertyKey": {
            "type": "string",
            "description": "Can be used to fill the field from a contract property."
          },
          "reverseContractPartyFieldId": {
            "type": "string",
            "description": "Can be used to fill the field from a party."
          },
          "form": {
            "description": "JSON dictionary representing the **form** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/form"
              }
            ]
          },
          "group": {
            "description": "The group this field belongs to JSON dictionary representing the **formgroup** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/formgroup"
              }
            ]
          },
          "contractproperty": {
            "description": "Represents a mapping to a contract property JSON dictionary representing the **contractproperty** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/contractproperty"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "formgroup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/formgroup-without-required-constraint"
          }
        ]
      },
      "formgroup-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **FormGroup**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "position": {
            "type": "number",
            "format": "double"
          },
          "canSubmit": {
            "type": "boolean"
          },
          "isSystemGroup": {
            "type": "boolean",
            "description": "Whether this group is a system group or not. System groups are groups that are created by the system and cannot be deleted."
          },
          "form": {
            "description": "JSON dictionary representing the **form** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/form"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "formpermalink": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/formpermalink-without-required-constraint"
          }
        ]
      },
      "formpermalink-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **FormPermalink**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "key": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean",
            "default": false
          },
          "form": {
            "description": "JSON dictionary representing the **form** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/form"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "formsequence": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/formsequence-without-required-constraint"
          }
        ]
      },
      "formsequence-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **FormSequence**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "forms": {},
          "overrideEmailTemplates": {
            "description": "Allows to use an alternative email template for sending out the emails per form."
          },
          "hideFormsInHubSummary": {
            "description": "Allows to use an alternative email template for sending out the emails per form."
          },
          "pinnedForm": {
            "description": "A form that is highlighted when showing contract summary info in hub for approvers. JSON dictionary representing the **form** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/form"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "generationtestreport": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/generationtestreport-without-required-constraint"
          },
          {
            "required": [
              "name"
            ]
          }
        ]
      },
      "generationtestreport-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **GenerationTestReport**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "results": {},
          "isHealthy": {
            "type": "boolean",
            "default": false
          },
          "cache": {},
          "templatecontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "testcontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "group": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/group-without-required-constraint"
          },
          {
            "required": [
              "name"
            ]
          }
        ]
      },
      "group-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Group**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "description": "Name of the group.",
            "example": "Marketing department",
            "maxLength": 120
          },
          "description": {
            "type": "string",
            "description": "Description of the group",
            "example": "This group should be given to all users who are dealing with contracts owned by the marketing department.",
            "maxLength": 520
          },
          "sensitive": {
            "type": "boolean",
            "default": false,
            "description": "Whether the group is sensitive. Sensitive group contracts are hidden from Admins unless admins are in the group."
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "workflowview": {
            "description": "WorkflowView override for this group JSON dictionary representing the **workflowview** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/workflowview"
              }
            ]
          },
          "users": {
            "description": "Array of **user**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/user"
            }
          }
        }
      },
      "insight": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/insight-without-required-constraint"
          }
        ]
      },
      "insight-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Insight**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "hash": {
            "type": "string"
          },
          "variationStats": {},
          "negotiationStats": {},
          "variationHistory": {},
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "integration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/integration-without-required-constraint"
          }
        ]
      },
      "integration-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Integration**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "config": {},
          "fields": {},
          "actions": {},
          "data": {},
          "active": {
            "type": "boolean"
          },
          "activeUsers": {},
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "integrationtoken": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/integrationtoken-without-required-constraint"
          }
        ]
      },
      "integrationtoken-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **IntegrationToken**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "token": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date"
          },
          "apiAccessPoint": {
            "type": "string"
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "integration": {
            "description": "JSON dictionary representing the **integration** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/integration"
              }
            ]
          }
        }
      },
      "logevent": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/logevent-without-required-constraint"
          }
        ]
      },
      "logevent-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **LogEvent**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "objectId": {
            "type": "string",
            "description": "The id of the object that was affected"
          },
          "model": {
            "type": "string",
            "description": "The model that was affected"
          },
          "action": {
            "type": "string",
            "description": "The action that was performed"
          },
          "data": {
            "type": "string",
            "description": "Description of what happened"
          },
          "metaData": {
            "description": "Additional metadata about the event"
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "loginmanager": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/loginmanager-without-required-constraint"
          }
        ]
      },
      "loginmanager-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **LoginManager**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "users": {
            "description": "Which users are connected via login manager object allowing them to shift accounts quickly Array of **user**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/user"
            }
          }
        }
      },
      "migration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/migration-without-required-constraint"
          }
        ]
      },
      "migration-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Migration**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "description": "Name of the migration to be run."
          },
          "error": {
            "type": "string",
            "nullable": true,
            "description": "Error when running migration."
          },
          "status": {
            "type": "string",
            "nullable": true,
            "description": "Status of the migration, used to check if a given migration is run.",
            "enum": [
              "running",
              "done",
              "failed"
            ]
          }
        }
      },
      "party": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/party-without-required-constraint"
          }
        ]
      },
      "party-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Party**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "firstName": {
            "type": "string",
            "maxLength": 64
          },
          "lastName": {
            "type": "string",
            "maxLength": 64
          },
          "email": {
            "type": "string",
            "default": ""
          },
          "address": {
            "type": "string",
            "maxLength": 256
          },
          "phone": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "idType": {
            "type": "string"
          },
          "idNumber": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "designation": {
            "type": "string"
          },
          "isEntity": {
            "type": "boolean",
            "default": false,
            "description": "Determines whether the Party is a legal entity, otherwise an individual"
          },
          "entityName": {
            "type": "string",
            "maxLength": 512
          },
          "entityType": {
            "type": "string",
            "maxLength": 128
          },
          "entityRegNo": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {},
            "default": [],
            "example": []
          },
          "deleted": {
            "type": "boolean",
            "default": false
          },
          "searchString": {
            "type": "string"
          },
          "abbreviations": {
            "type": "string",
            "description": "A comma separated list of abbreviations used for better search"
          },
          "customAttributes": {
            "type": "object",
            "properties": {},
            "default": {},
            "example": {}
          },
          "isSanctioned": {
            "type": "boolean",
            "description": "Determines whether the Party is sanctioned"
          },
          "isInternal": {
            "type": "boolean",
            "default": false,
            "description": "Indicates if the party is considered internal to the user's organization (e.g., one of its own legal entities or an internal representative/employee.)"
          },
          "runId": {
            "type": "string"
          },
          "unconfirmed": {
            "type": "boolean",
            "default": false,
            "description": "AI extracted party that needs to be confirmed by the user. Not shown in contact book etc."
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "parent": {
            "description": "JSON dictionary representing the **party** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/party"
              }
            ]
          }
        }
      },
      "partyattribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/partyattribute-without-required-constraint"
          },
          {
            "required": [
              "label",
              "key"
            ]
          }
        ]
      },
      "partyattribute-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **PartyAttribute**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "label": {
            "type": "string",
            "maxLength": 64
          },
          "description": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "options": {},
          "partyType": {
            "type": "string",
            "default": "both",
            "enum": [
              "individual",
              "entity",
              "both"
            ],
            "example": "both"
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "playbook": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/playbook-without-required-constraint"
          }
        ]
      },
      "playbook-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Playbook**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "description": "Playbook name"
          },
          "version": {
            "type": "number",
            "format": "double",
            "default": 1,
            "description": "Playbook version",
            "example": 1
          },
          "status": {
            "type": "string",
            "default": "production",
            "description": "Playbook status",
            "example": "production"
          },
          "description": {
            "type": "string",
            "description": "Playbook description"
          },
          "positions": {
            "description": "Playbook positions"
          },
          "groups": {
            "description": "Playbook groups"
          },
          "versionNote": {
            "type": "string",
            "default": "Initial version",
            "description": "Note for this version of the playbook",
            "example": "Initial version"
          },
          "settings": {
            "type": "object",
            "properties": {
              "aiLevel": {
                "example": 2,
                "type": "integer",
                "format": "int64"
              }
            },
            "default": {
              "aiLevel": 2
            },
            "description": "Playbook settings",
            "example": {
              "aiLevel": 2
            }
          },
          "deleted": {
            "type": "boolean"
          },
          "parentPlaybook": {
            "description": "Parent playbook for versioning (self-reference for root playbooks) JSON dictionary representing the **playbook** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbook"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "categories": {}
        }
      },
      "playbookcontract": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/playbookcontract-without-required-constraint"
          },
          {
            "required": [
              "name",
              "fileName",
              "fileKey"
            ]
          }
        ]
      },
      "playbookcontract-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **PlaybookContract**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "description": "Contract name",
            "example": "NDA of the year",
            "maxLength": 256
          },
          "reference": {
            "type": "string",
            "default": "",
            "description": "Contract reference number, format is customizable per company"
          },
          "visibilitySettings": {
            "type": "object",
            "properties": {},
            "default": {},
            "description": "Role based options for contract tabs & timeline",
            "example": {}
          },
          "executedAt": {
            "type": "string",
            "format": "date"
          },
          "executionMethod": {
            "type": "string",
            "default": "",
            "description": "Method used to execute the contract: DocuSign integration, upload..."
          },
          "executedFileKey": {
            "type": "string",
            "default": "",
            "description": "File key of the executed contract, should always be pdf"
          },
          "executedFileName": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "File name of the executed contract (not in use yet, need to add)"
          },
          "contractType": {
            "type": "string",
            "default": "playbook",
            "description": "Contract type identifier",
            "enum": [
              "playbook"
            ],
            "example": "playbook"
          },
          "fileName": {
            "type": "string",
            "description": "File name",
            "example": "xxx-yyy-zzz.doc",
            "maxLength": 256
          },
          "fileKey": {
            "type": "string",
            "description": "File key",
            "example": "xxx-yyy-zzz.doc",
            "maxLength": 256
          },
          "htmlFileKey": {
            "type": "string"
          },
          "effectiveDate": {
            "type": "string",
            "default": ""
          },
          "archived": {
            "type": "boolean",
            "default": false,
            "description": "Whether the contract has been archived"
          },
          "status": {
            "type": "number",
            "format": "double",
            "default": 2,
            "example": 2
          },
          "final": {
            "type": "boolean",
            "default": false
          },
          "finalizedAt": {
            "type": "string",
            "format": "date",
            "description": "When contract was finalized i.e. declared no more changes, but not signed yet."
          },
          "finalizedFileKey": {
            "type": "string",
            "default": ""
          },
          "metaData": {
            "description": "Meta data related to the contract."
          },
          "subcategories": {},
          "properties": {},
          "searchString": {
            "type": "string",
            "default": ""
          },
          "deleted": {
            "type": "boolean",
            "default": false
          },
          "aborted": {
            "type": "boolean",
            "default": false
          },
          "lastAbortNotificationDate": {
            "type": "string",
            "format": "date"
          },
          "abortedAt": {
            "type": "string",
            "format": "date"
          },
          "uninitialized": {
            "type": "boolean",
            "default": false,
            "description": "Whether the playbook has been applied"
          },
          "hubRequestStatus": {
            "type": "string",
            "default": "",
            "enum": [
              "accepted",
              "blocked"
            ]
          },
          "directDownloadToken": {
            "type": "string",
            "description": "Token used for direct download of contract. First letter signifies contract type."
          },
          "signingSettings": {
            "type": "object",
            "properties": {
              "integration": {
                "example": "DocuSign",
                "type": "string"
              },
              "order": {
                "example": "parallel",
                "type": "string"
              },
              "partialSigningEnabled": {
                "example": false,
                "type": "boolean"
              },
              "signers": {
                "example": [
                  {
                    "firstName": "John",
                    "lastName": "Doe",
                    "name": "John Doe",
                    "email": "john@doe.com",
                    "message": "",
                    "sequenceFormId": ""
                  }
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "firstName": {
                      "example": "John",
                      "type": "string"
                    },
                    "lastName": {
                      "example": "Doe",
                      "type": "string"
                    },
                    "name": {
                      "example": "John Doe",
                      "type": "string"
                    },
                    "email": {
                      "example": "john@doe.com",
                      "type": "string"
                    },
                    "message": {
                      "example": "",
                      "type": "string"
                    },
                    "sequenceFormId": {
                      "example": "",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Signing configuration for the contract",
            "example": {
              "integration": "DocuSign",
              "order": "parallel",
              "partialSigningEnabled": false,
              "signers": [
                {
                  "firstName": "John",
                  "lastName": "Doe",
                  "name": "John Doe",
                  "email": "john@doe.com",
                  "message": "",
                  "sequenceFormId": ""
                }
              ]
            }
          },
          "actionRequiredUsers": {
            "type": "array",
            "items": {},
            "default": [],
            "example": []
          },
          "aiSettings": {
            "type": "object",
            "properties": {},
            "default": {},
            "description": "AI model settings",
            "example": {}
          },
          "creator": {
            "description": "User that created the contract. JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "requester": {
            "description": "User that started the contract request process. JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "user": {
            "description": "User that is assigned as the owner of the contract JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "group": {
            "description": "JSON dictionary representing the **group** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/group"
              }
            ]
          },
          "playbook": {
            "description": "JSON dictionary representing the **playbook** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbook"
              }
            ]
          },
          "category": {
            "description": "JSON dictionary representing the **category** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/category"
              }
            ]
          },
          "form": {
            "description": "JSON dictionary representing the **form** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/form"
              }
            ]
          },
          "formentry": {
            "description": "JSON dictionary representing the **formentry** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/formentry"
              }
            ]
          }
        }
      },
      "playbookdeviationjustification": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/playbookdeviationjustification-without-required-constraint"
          },
          {
            "required": [
              "text"
            ]
          }
        ]
      },
      "playbookdeviationjustification-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **PlaybookDeviationJustification**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "text": {
            "type": "string"
          },
          "playbookPositionIndex": {
            "type": "number",
            "format": "double"
          },
          "playbookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "playbooklead": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/playbooklead-without-required-constraint"
          }
        ]
      },
      "playbooklead-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **PlaybookLead**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "email": {
            "type": "string"
          },
          "responses": {},
          "playbook": {}
        }
      },
      "playbookreview": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/playbookreview-without-required-constraint"
          }
        ]
      },
      "playbookreview-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **PlaybookReview**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "results": {},
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "playbookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          }
        }
      },
      "playbookround": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/playbookround-without-required-constraint"
          }
        ]
      },
      "playbookround-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **PlaybookRound**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "direction": {
            "type": "string",
            "description": "Direction of the round: create, send, receive, or final"
          },
          "comment": {
            "type": "string"
          },
          "file": {
            "type": "string"
          },
          "htmlFileKey": {
            "type": "string"
          },
          "party": {
            "type": "string"
          },
          "userDate": {
            "type": "string",
            "format": "date"
          },
          "clauses": {},
          "source": {
            "type": "string",
            "default": "plugin",
            "description": "Where the round came from. Value is either 'plugin' or 'upload' or 'web'",
            "example": "plugin"
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "playbookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          },
          "playbook": {
            "description": "JSON dictionary representing the **playbook** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbook"
              }
            ]
          },
          "documentsnapshot": {
            "description": "JSON dictionary representing the **documentsnapshot** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/documentsnapshot"
              }
            ]
          }
        }
      },
      "playbookroundposition": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/playbookroundposition-without-required-constraint"
          }
        ]
      },
      "playbookroundposition-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **PlaybookRoundPosition**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "compliance": {
            "type": "string",
            "default": "pending",
            "description": "The compliance decision",
            "enum": [
              "compliant",
              "non-compliant",
              "uncertain",
              "pending",
              "not-applicable"
            ],
            "example": "pending"
          },
          "clauses": {
            "type": "array",
            "items": {},
            "default": [],
            "example": []
          },
          "predictions": {
            "description": "Array of objects with modelId and output (array of objects)"
          },
          "discarded": {},
          "justification": {
            "type": "string",
            "description": "The justification for the compliance decision by user"
          },
          "autoJustification": {
            "type": "string",
            "default": "",
            "description": "The justification for the compliance decision by AI"
          },
          "autoFallbackOptions": {
            "type": "array",
            "items": {},
            "default": [],
            "description": "The fallback options for the position by AI",
            "example": []
          },
          "basisSentences": {
            "type": "array",
            "items": {},
            "default": [],
            "description": "The basis sentences for the position by AI",
            "example": []
          },
          "runId": {
            "type": "string",
            "description": "The runId for the position by AI"
          },
          "playbookPositionIndex": {
            "type": "number",
            "format": "double",
            "description": "The index of the playbook position"
          },
          "hasChanged": {
            "type": "boolean"
          },
          "areChangesValidated": {
            "type": "boolean"
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "playbook": {
            "description": "JSON dictionary representing the **playbook** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbook"
              }
            ]
          },
          "playbookround": {
            "description": "JSON dictionary representing the **playbookround** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookround"
              }
            ]
          },
          "playbookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          }
        }
      },
      "recurringnotification": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/recurringnotification-without-required-constraint"
          },
          {
            "required": [
              "type",
              "template",
              "to"
            ]
          }
        ]
      },
      "recurringnotification-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **RecurringNotification**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "type": {
            "type": "string",
            "enum": [
              "approval",
              "esignature"
            ]
          },
          "status": {
            "type": "string",
            "default": "active",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "active"
          },
          "context": {
            "type": "object",
            "properties": {},
            "default": {},
            "example": {}
          },
          "template": {
            "type": "string"
          },
          "templateData": {
            "type": "object",
            "properties": {},
            "default": {},
            "example": {}
          },
          "to": {
            "type": "string"
          },
          "submissions": {},
          "nextSubmission": {
            "type": "string",
            "format": "date"
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "reminder": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/reminder-without-required-constraint"
          },
          {
            "required": [
              "name",
              "description",
              "type"
            ]
          }
        ]
      },
      "reminder-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Reminder**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "Type of reminder \"oneoff\" or \"recurring\""
          },
          "dates": {
            "description": "Array of dates when reminders are sent"
          },
          "recurringFrequency": {
            "type": "string"
          },
          "recurringStartDate": {
            "type": "string",
            "format": "date"
          },
          "recurringStartDateObject": {},
          "recurringLastSent": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "string"
          },
          "emails": {
            "type": "array",
            "items": {},
            "default": [],
            "description": "Array of emails who are to be reminded",
            "example": []
          },
          "unconfirmed": {
            "type": "boolean",
            "default": false,
            "description": "Flag to determine whether the reminder needs user confirmation"
          },
          "extractedDate": {
            "type": "string",
            "format": "date",
            "default": null,
            "description": "Dates extracted by AI"
          },
          "runId": {
            "type": "string",
            "description": "The id of the run that created the reminder"
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "The user who created the reminder JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "templatecontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "playbookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          },
          "externalcontract": {
            "description": "JSON dictionary representing the **externalcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalcontract"
              }
            ]
          }
        }
      },
      "role": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/role-without-required-constraint"
          },
          {
            "required": [
              "name"
            ]
          }
        ]
      },
      "role-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Role**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "description": "Name of the role",
            "example": "mega admin",
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "description": "Optional role description",
            "example": "Mega admin has a lot of power.",
            "maxLength": 300
          },
          "grants": {
            "type": "array",
            "items": {},
            "default": [],
            "description": "Contains the grants for the role.",
            "example": []
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "round": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/round-without-required-constraint"
          }
        ]
      },
      "round-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Round**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "comment": {
            "type": "string"
          },
          "direction": {
            "type": "string",
            "description": "Either \"create\", \"send\", or \"receive\". Template rounds do not have \"final\" direction."
          },
          "party": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "Either \"External party\" or a group name"
          },
          "userDate": {
            "type": "string",
            "format": "date"
          },
          "baseline": {},
          "file": {
            "type": "string"
          },
          "htmlFileKey": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "default": "plugin",
            "example": "plugin"
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "contract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "template": {
            "description": "JSON dictionary representing the **template** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/template"
              }
            ]
          }
        }
      },
      "rounddiff": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/rounddiff-without-required-constraint"
          },
          {
            "required": [
              "hash",
              "variationType",
              "category",
              "text"
            ]
          }
        ]
      },
      "rounddiff-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **RoundDiff**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "hash": {
            "type": "string"
          },
          "rootHash": {
            "type": "string"
          },
          "templateHash": {
            "type": "string",
            "nullable": true
          },
          "variationType": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "userAction": {
            "type": "string"
          },
          "level": {},
          "baseline": {},
          "text": {
            "type": "string"
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "contract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "round": {
            "description": "JSON dictionary representing the **round** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/round"
              }
            ]
          }
        }
      },
      "sanctionsreport": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/sanctionsreport-without-required-constraint"
          },
          {
            "required": [
              "cacheKey"
            ]
          }
        ]
      },
      "sanctionsreport-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **SanctionsReport**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "cacheKey": {
            "type": "string",
            "description": "Cache key for the report",
            "example": "checkEntity-Pactly Private Limited",
            "uniqueItems": true
          },
          "hits": {
            "type": "array",
            "items": {},
            "default": [],
            "description": "Contains the report for the entity/individual",
            "example": []
          }
        }
      },
      "signuplink": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/signuplink-without-required-constraint"
          },
          {
            "required": [
              "key",
              "active"
            ]
          }
        ]
      },
      "signuplink-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **SignupLink**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "key": {
            "type": "string",
            "description": "Url for signup",
            "maxLength": 64
          },
          "name": {
            "type": "string",
            "description": "Name of the signup link",
            "maxLength": 128
          },
          "userConfig": {
            "type": "object",
            "properties": {
              "role": {
                "example": "requester",
                "type": "string"
              },
              "groups": {
                "example": [],
                "type": "array",
                "items": {}
              }
            },
            "description": "Configuration for the signup user",
            "example": {
              "role": "requester",
              "groups": []
            }
          },
          "welcomeMessage": {
            "type": "string",
            "description": "Welcome message",
            "maxLength": 1024
          },
          "emailDomainWhitelist": {
            "type": "string",
            "description": "Comma separated list of email domains",
            "example": "example.com,pactly.com"
          },
          "active": {
            "type": "boolean"
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "template": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/template-without-required-constraint"
          },
          {
            "required": [
              "name",
              "description"
            ]
          }
        ]
      },
      "template-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Template**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "description": "Template name",
            "maxLength": 64
          },
          "description": {
            "type": "string",
            "description": "Template description"
          },
          "version": {
            "type": "string",
            "default": "0.0.1",
            "description": "Template version in semver e.g. 1.0.1",
            "example": "0.0.1"
          },
          "clauses": {
            "type": "array",
            "items": {},
            "default": [],
            "example": []
          },
          "variables": {},
          "tables": {},
          "valuemaps": {},
          "rules": {},
          "ruleStatements": {},
          "computed": {},
          "parties": {},
          "embeds": {},
          "header": {
            "type": "string"
          },
          "footer": {
            "type": "string"
          },
          "belongsToSet": {
            "type": "boolean",
            "description": "True if contract is a part of a set"
          },
          "setRole": {
            "type": "string",
            "description": "Describes the contracts role in a set. Options are \"baseDocument\" and \"module\"."
          },
          "clauseIndexLabelType": {
            "type": "string",
            "default": ""
          },
          "file": {
            "type": "string",
            "default": "",
            "description": "S3 key for the template docx file stored in bucket/folderTemplates"
          },
          "fileUpdatedAt": {
            "type": "string",
            "format": "date",
            "description": "Timestamp when the template file was last updated in S3"
          },
          "enableCurrency": {
            "type": "boolean",
            "default": false
          },
          "hasHeaderFooterTags": {
            "type": "boolean",
            "default": false
          },
          "order": {
            "type": "number",
            "format": "double",
            "default": 0
          },
          "deleted": {
            "type": "boolean",
            "default": false
          },
          "parseFromFile": {
            "type": "boolean",
            "default": false,
            "description": "True if the template should be parsed from a file (controlled in template settings)"
          },
          "anchorBlocks": {},
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "setModuleTo": {
            "description": "JSON dictionary representing the **template** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/template"
              }
            ]
          },
          "group": {
            "description": "JSON dictionary representing the **group** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/group"
              }
            ]
          },
          "category": {
            "description": "Category of the template e.g. NDA JSON dictionary representing the **category** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/category"
              }
            ]
          },
          "originTemplateId": {
            "description": "Id of the original template from which this template was copied from. JSON dictionary representing the **template** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/template"
              }
            ]
          },
          "containsBlockingContent": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "templatebackup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/templatebackup-without-required-constraint"
          },
          {
            "required": [
              "name",
              "description"
            ]
          }
        ]
      },
      "templatebackup-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **TemplateBackup**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "description": "Template name",
            "maxLength": 64
          },
          "description": {
            "type": "string",
            "description": "Template description"
          },
          "version": {
            "type": "string",
            "default": "0.0.1",
            "description": "Template version in semver e.g. 1.0.1",
            "example": "0.0.1"
          },
          "clauses": {},
          "variables": {},
          "tables": {},
          "valuemaps": {},
          "rules": {},
          "file": {
            "type": "string"
          },
          "belongsToSet": {
            "type": "boolean"
          },
          "setRole": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "setModuleTo": {
            "description": "JSON dictionary representing the **template** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/template"
              }
            ]
          },
          "group": {
            "description": "JSON dictionary representing the **group** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/group"
              }
            ]
          },
          "template": {
            "description": "JSON dictionary representing the **template** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/template"
              }
            ]
          }
        }
      },
      "templatecontract": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/templatecontract-without-required-constraint"
          },
          {
            "required": [
              "name"
            ]
          }
        ]
      },
      "templatecontract-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **TemplateContract**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "description": "Contract name",
            "example": "NDA of the year",
            "maxLength": 256
          },
          "reference": {
            "type": "string",
            "default": "",
            "description": "Contract reference number, format is customizable per company"
          },
          "visibilitySettings": {
            "type": "object",
            "properties": {},
            "default": {},
            "description": "Role based options for contract tabs & timeline",
            "example": {}
          },
          "executedAt": {
            "type": "string",
            "format": "date"
          },
          "executionMethod": {
            "type": "string",
            "description": "Method used to execute the contract: DocuSign integration, upload..."
          },
          "executedFileKey": {
            "type": "string",
            "default": "",
            "description": "File key of the executed contract, should always be pdf"
          },
          "executedFileName": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "File name of the executed contract (not in use yet, need to add)"
          },
          "contractType": {
            "type": "string",
            "default": "template",
            "description": "Contract type identifier",
            "enum": [
              "template"
            ],
            "example": "template"
          },
          "fileName": {
            "type": "string",
            "description": "Contract file name when downloading contract",
            "example": "NDA of the year.docx"
          },
          "baseline": {},
          "file": {
            "type": "string",
            "default": "",
            "description": "File object key on AWS s3"
          },
          "htmlFileKey": {
            "type": "string",
            "description": "File object key on AWS s3"
          },
          "belongsToSet": {
            "type": "boolean",
            "default": false,
            "description": "True if contract is a part of a set"
          },
          "setRole": {
            "type": "string",
            "default": "",
            "description": "Describes the contracts role in a set. Options are \"baseDocument\" and \"module\"."
          },
          "final": {
            "type": "boolean",
            "default": false
          },
          "ignore": {
            "type": "boolean",
            "default": false,
            "description": "Ignore contract in stats and reports (what else?)"
          },
          "effectiveDate": {
            "type": "string",
            "default": "",
            "description": "Effective date of the contract in string format (not sure why not a date obj?)"
          },
          "finalizedAt": {
            "type": "string",
            "format": "date",
            "description": "When contract was finalized i.e. declared no more changes, but not signed yet."
          },
          "definitions": {},
          "ignoreHygieneCheckList": {},
          "status": {
            "type": "number",
            "format": "double",
            "default": 1,
            "description": "Status of the contract 1 = draft, 2 = in negotiation, 3 = pending approval, 4 = pending signature, 5 = executed, 6 = terminated",
            "example": 1
          },
          "subcategories": {},
          "metaData": {
            "description": "Meta data related to the contract."
          },
          "values": {
            "description": "Values used for template generation, not editable by users."
          },
          "properties": {
            "description": "Contract properties editable by users"
          },
          "searchString": {
            "type": "string",
            "default": ""
          },
          "archived": {
            "type": "boolean",
            "default": false
          },
          "deleted": {
            "type": "boolean",
            "default": false
          },
          "aborted": {
            "type": "boolean",
            "default": false
          },
          "lastAbortNotificationDate": {
            "type": "string",
            "format": "date"
          },
          "abortedAt": {
            "type": "string",
            "format": "date"
          },
          "blocked": {
            "type": "boolean",
            "default": false,
            "description": "Contract contained blocked texts set in the template config."
          },
          "hubRequestStatus": {
            "type": "string",
            "default": "",
            "enum": [
              "",
              "accepted",
              "blocked"
            ]
          },
          "directDownloadToken": {
            "type": "string",
            "description": "Token used for direct download of contract. First letter signifies contract type."
          },
          "signingSettings": {
            "type": "object",
            "properties": {
              "integration": {
                "example": "DocuSign",
                "type": "string"
              },
              "order": {
                "example": "parallel",
                "type": "string"
              },
              "partialSigningEnabled": {
                "example": false,
                "type": "boolean"
              },
              "signers": {
                "example": [
                  {
                    "firstName": "John",
                    "lastName": "Doe",
                    "name": "John Doe",
                    "email": "john@doe.com",
                    "message": "",
                    "sequenceFormId": ""
                  }
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "firstName": {
                      "example": "John",
                      "type": "string"
                    },
                    "lastName": {
                      "example": "Doe",
                      "type": "string"
                    },
                    "name": {
                      "example": "John Doe",
                      "type": "string"
                    },
                    "email": {
                      "example": "john@doe.com",
                      "type": "string"
                    },
                    "message": {
                      "example": "",
                      "type": "string"
                    },
                    "sequenceFormId": {
                      "example": "",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Signing configuration for the contract",
            "example": {
              "integration": "DocuSign",
              "order": "parallel",
              "partialSigningEnabled": false,
              "signers": [
                {
                  "firstName": "John",
                  "lastName": "Doe",
                  "name": "John Doe",
                  "email": "john@doe.com",
                  "message": "",
                  "sequenceFormId": ""
                }
              ]
            }
          },
          "actionRequiredUsers": {
            "type": "array",
            "items": {},
            "default": [],
            "example": []
          },
          "aiSettings": {
            "type": "object",
            "properties": {},
            "default": {},
            "description": "AI model settings",
            "example": {}
          },
          "creator": {
            "description": "User that created the contract. JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "requester": {
            "description": "User that started the contract request process. JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "user": {
            "description": "User that is assigned as the owner of the contract JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "template": {
            "description": "JSON dictionary representing the **template** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/template"
              }
            ]
          },
          "group": {
            "description": "JSON dictionary representing the **group** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/group"
              }
            ]
          },
          "setModuleTo": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "category": {
            "description": "JSON dictionary representing the **category** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/category"
              }
            ]
          },
          "form": {
            "description": "JSON dictionary representing the **form** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/form"
              }
            ]
          },
          "formentry": {
            "description": "JSON dictionary representing the **formentry** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/formentry"
              }
            ]
          }
        }
      },
      "templatefallback": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/templatefallback-without-required-constraint"
          }
        ]
      },
      "templatefallback-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **TemplateFallback**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "title": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "html": {
            "type": "string"
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "template": {
            "description": "JSON dictionary representing the **template** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/template"
              }
            ]
          },
          "originId": {
            "description": "Id of the original template fallback from which this was copied from. JSON dictionary representing the **templatefallback** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatefallback"
              }
            ]
          }
        }
      },
      "templatemapping": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/templatemapping-without-required-constraint"
          }
        ]
      },
      "templatemapping-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **TemplateMapping**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "hash": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "previousHash": {
            "type": "string"
          },
          "previousText": {
            "type": "string"
          },
          "previousHtml": {
            "type": "string"
          },
          "previousOoxml": {
            "type": "string"
          },
          "currentHash": {
            "type": "string"
          },
          "currentText": {
            "type": "string"
          },
          "track": {
            "type": "boolean",
            "default": false
          },
          "template": {
            "description": "JSON dictionary representing the **template** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/template"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "templatenote": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/templatenote-without-required-constraint"
          }
        ]
      },
      "templatenote-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **TemplateNote**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "text": {
            "type": "string"
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "template": {
            "description": "JSON dictionary representing the **template** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/template"
              }
            ]
          },
          "originId": {
            "description": "Id of the original template note from which this was copied from. JSON dictionary representing the **templatenote** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatenote"
              }
            ]
          }
        }
      },
      "templatereview": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/templatereview-without-required-constraint"
          }
        ]
      },
      "templatereview-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **TemplateReview**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "clauses": {},
          "contentHash": {
            "type": "string"
          },
          "clausesWithBlockers": {},
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "template": {
            "description": "JSON dictionary representing the **template** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/template"
              }
            ]
          },
          "contract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "round": {
            "description": "JSON dictionary representing the **round** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/round"
              }
            ]
          }
        }
      },
      "timelineitem": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/timelineitem-without-required-constraint"
          }
        ]
      },
      "timelineitem-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **TimelineItem**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Time when timeline item was generated."
          },
          "type": {
            "type": "string",
            "default": "",
            "description": "The type of timeline item - decides how it will be rendered.",
            "enum": [
              "abort",
              "abortSignature",
              "dsEnvelope",
              "asEvent",
              "uploadSigned",
              "authorizationAdded",
              "authorizationRemoved",
              "contractAssigned",
              "email",
              "note",
              "hubRequestBlocked",
              "formSequence",
              "requesterSet",
              "undoExecution",
              "undoFinalization",
              "actionRequired",
              "setContractStatus",
              "termination",
              "deletion",
              "formEntryUpdated",
              "formEntryReassigned",
              "attachmentDeleted",
              "reminderDeleted",
              "reminderAdded"
            ]
          },
          "payload": {
            "type": "object",
            "properties": {},
            "default": {},
            "description": "Possible payload for timeline item, can come from model or be filled in manually",
            "example": {}
          },
          "payloadId": {
            "type": "string",
            "default": "",
            "description": "Possible payload id for timeline item"
          },
          "payloadModelName": {
            "type": "string",
            "default": "",
            "description": "Model name for the payload"
          },
          "payloadModelAttributes": {
            "description": "Decides which attributes of the payload should be included."
          },
          "pinned": {
            "type": "boolean",
            "default": false,
            "description": "Whether the note is pinned or not"
          },
          "templatecontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "playbookcontract": {
            "description": "JSON dictionary representing the **playbookcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/playbookcontract"
              }
            ]
          },
          "externalcontract": {
            "description": "JSON dictionary representing the **externalcontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalcontract"
              }
            ]
          },
          "user": {
            "description": "User who created the timeline item JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "Company timeline item belongs to JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "timeslice": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/timeslice-without-required-constraint"
          },
          {
            "required": [
              "start",
              "end",
              "duration",
              "tags"
            ]
          }
        ]
      },
      "timeslice-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Timeslice**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "start": {
            "type": "number",
            "format": "double",
            "description": "Timestamp start of the timeslice.",
            "example": 2394239292
          },
          "end": {
            "type": "number",
            "format": "double",
            "description": "Timestamp end of the timeslice.",
            "example": 2394239292
          },
          "duration": {
            "type": "number",
            "format": "double",
            "description": "Duration of the timeslice in millisecs",
            "example": 232332
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags describing the timeslice.",
            "example": [
              "route:content.clauses",
              "host:localhost:4200",
              "mode:desktop"
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "user": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/user-without-required-constraint"
          },
          {
            "required": [
              "email",
              "firstName",
              "lastName"
            ]
          }
        ]
      },
      "user-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **User**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email address for this user.",
            "example": "john.doe@google.com",
            "maxLength": 200,
            "uniqueItems": true
          },
          "password": {
            "type": "string",
            "description": "Securely hashed representation of the user's login password.",
            "example": "2$28a8eabna301089103-13948134nad"
          },
          "mfaEnabled": {
            "type": "boolean",
            "default": false,
            "description": "Is mfa enabled for the user."
          },
          "mfaSecret": {
            "type": "string",
            "default": "",
            "description": "Multifactor authentication secret.",
            "example": "asefokasofkas9efksfkj"
          },
          "firstName": {
            "type": "string",
            "description": "Users first name",
            "example": "John",
            "maxLength": 120
          },
          "lastName": {
            "type": "string",
            "description": "Users last name",
            "example": "Doe",
            "maxLength": 120
          },
          "role": {
            "type": "string",
            "default": "user",
            "description": "Users role (available roles: admin, usermanager, manager, user, lite)",
            "example": "admin"
          },
          "resetPasswordToken": {
            "type": "string",
            "description": "Token to recover password"
          },
          "resetPasswordTokenExpires": {
            "type": "number",
            "format": "double",
            "description": "Token expiry date"
          },
          "signupVerifyToken": {
            "type": "string",
            "description": "Token to verify user on signup. If set, blocks the user from logging in with normal methods."
          },
          "dismissedGuides": {
            "type": "object",
            "properties": {
              "contractHelpPopup": {
                "example": false,
                "type": "boolean"
              }
            },
            "default": {
              "contractHelpPopup": false
            },
            "description": "Used to track which guides/helpers user has seen.",
            "example": {
              "contractHelpPopup": false
            }
          },
          "growthProperties": {
            "type": "object",
            "properties": {
              "signupSource": {
                "example": "",
                "type": "string"
              },
              "startGuideCompleted": {
                "example": false,
                "type": "boolean"
              },
              "startGuideCompletedDate": {
                "example": null,
                "type": "object",
                "properties": {}
              },
              "startGuidePreference": {
                "example": "",
                "type": "string"
              },
              "startGuideTourStates": {
                "example": {},
                "type": "object",
                "properties": {}
              }
            },
            "default": {
              "signupSource": "",
              "startGuideCompleted": false,
              "startGuideCompletedDate": null,
              "startGuidePreference": "",
              "startGuideTourStates": {}
            },
            "description": "Used to track growth / marketing data about the user.",
            "example": {
              "signupSource": "",
              "startGuideCompleted": false,
              "startGuideCompletedDate": null,
              "startGuidePreference": "",
              "startGuideTourStates": {}
            }
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "Used to track wether the user has been deleted or not."
          },
          "master": {
            "type": "boolean",
            "default": false,
            "description": "Allows Ivan the management of secret stuff"
          },
          "lastLogoutDate": {
            "type": "string",
            "format": "date",
            "default": 0,
            "description": "Tracks users last logout time for token expiration."
          },
          "lastLoginDate": {
            "type": "string",
            "format": "date",
            "description": "Tracks user last login date"
          },
          "lastSeenDate": {
            "type": "string",
            "format": "date",
            "description": "Tracks user lastseen date"
          },
          "contractRepositoryColumns": {
            "description": "Columns of the contracts repository table view"
          },
          "ignore": {
            "type": "boolean",
            "default": false,
            "description": "Determines whether this user is ignored by usage limits"
          },
          "searchString": {
            "type": "string",
            "description": "firstName | lastName | email"
          },
          "samlSessionIndex": {
            "type": "string",
            "default": "",
            "description": "Saml session index which is needed for logging out."
          },
          "samlNameId": {
            "type": "string",
            "default": "",
            "description": "Saml name id which is needed for logging out."
          },
          "ldapUid": {
            "type": "string",
            "default": "",
            "description": "Users ldap username."
          },
          "adDn": {
            "type": "string",
            "default": "",
            "description": "Users AD distinguished name."
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "loginmanager": {
            "description": "JSON dictionary representing the **loginmanager** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/loginmanager"
              }
            ]
          },
          "groups": {
            "description": "Array of **group**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/group"
            }
          }
        }
      },
      "variationlog": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/variationlog-without-required-constraint"
          }
        ]
      },
      "variationlog-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **VariationLog**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "variations": {},
          "valid": {
            "type": "boolean",
            "default": true,
            "example": true
          },
          "userDate": {
            "type": "string",
            "format": "date"
          },
          "template": {
            "description": "JSON dictionary representing the **template** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/template"
              }
            ]
          },
          "templatecontract": {
            "description": "JSON dictionary representing the **templatecontract** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/templatecontract"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "workflow": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/workflow-without-required-constraint"
          }
        ]
      },
      "workflow-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Workflow**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          }
        }
      },
      "workflowaction": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/workflowaction-without-required-constraint"
          }
        ]
      },
      "workflowaction-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **WorkflowAction**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "type": {
            "type": "string",
            "description": "The type of action to run i.e. \"notify\", \"assign\", etc"
          },
          "config": {
            "description": "The configuration for the action"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "Whether the action is active, inactive actions are not run",
            "example": true
          },
          "primary": {
            "type": "boolean",
            "default": false
          },
          "workflowevents": {},
          "workflowview": {
            "description": "JSON dictionary representing the **workflowview** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/workflowview"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "workflowevent": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/workflowevent-without-required-constraint"
          }
        ]
      },
      "workflowevent-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **WorkflowEvent**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "Type is the machine readable name for the event i.e. playbookConfirmed, contractAssigned, etc"
          },
          "context": {},
          "group": {
            "type": "string"
          },
          "internal": {
            "type": "boolean"
          },
          "staticActions": {},
          "requiredActions": {}
        }
      },
      "workflowrule": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/workflowrule-without-required-constraint"
          }
        ]
      },
      "workflowrule-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **WorkflowRule**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "type": {
            "type": "string"
          },
          "value": {},
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "forms": {},
          "categories": {},
          "contractproperty": {
            "description": "JSON dictionary representing the **contractproperty** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/contractproperty"
              }
            ]
          },
          "contractpropertyoptions": {},
          "formsequences": {},
          "workflowaction": {
            "description": "JSON dictionary representing the **workflowaction** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/workflowaction"
              }
            ]
          },
          "workflowruleset": {
            "description": "JSON dictionary representing the **workflowruleset** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/workflowruleset"
              }
            ]
          }
        }
      },
      "workflowruleset": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/workflowruleset-without-required-constraint"
          }
        ]
      },
      "workflowruleset-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **WorkflowRuleSet**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "logic": {
            "type": "string",
            "default": "all",
            "example": "all"
          },
          "isRoot": {
            "type": "boolean"
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          },
          "workflowaction": {
            "description": "JSON dictionary representing the **workflowaction** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/workflowaction"
              }
            ]
          },
          "parent": {
            "description": "JSON dictionary representing the **workflowruleset** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/workflowruleset"
              }
            ]
          },
          "children": {}
        }
      },
      "workflowview": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/workflowview-without-required-constraint"
          }
        ]
      },
      "workflowview-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **WorkflowView**",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean",
            "default": false
          },
          "workflowevents": {},
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          },
          "company": {
            "description": "JSON dictionary representing the **company** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/company"
              }
            ]
          }
        }
      },
      "Contract": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Contract ID"
          },
          "type": {
            "type": "string",
            "enum": [
              "template",
              "playbook",
              "external"
            ],
            "description": "Contract type"
          },
          "name": {
            "type": "string",
            "description": "Contract name"
          },
          "reference": {
            "type": "string",
            "description": "Contract reference number"
          },
          "status": {
            "type": "string",
            "description": "Contract status"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "finalizedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "executedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "executionMethod": {
            "type": "string",
            "nullable": true
          },
          "archived": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "aborted": {
            "type": "boolean"
          },
          "final": {
            "type": "boolean"
          },
          "hubRequestStatus": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "description": "Contract properties with values and metadata",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "The property value"
                },
                "meta": {
                  "type": "object",
                  "description": "Property metadata including name, type, and grouping"
                }
              },
              "required": [
                "value",
                "meta"
              ]
            }
          },
          "user": {
            "type": "string",
            "nullable": true,
            "description": "ID of the user who owns the contract"
          },
          "requester": {
            "type": "string",
            "nullable": true,
            "description": "ID of the user who requested the contract"
          },
          "group": {
            "type": "string",
            "nullable": true,
            "description": "ID of the group this contract belongs to"
          },
          "category": {
            "type": "string",
            "nullable": true,
            "description": "ID of the contract category"
          },
          "form": {
            "type": "string",
            "nullable": true,
            "description": "ID of the associated form"
          },
          "formentry": {
            "type": "string",
            "nullable": true,
            "description": "ID of the form entry"
          },
          "template": {
            "type": "string",
            "nullable": true,
            "description": "ID of the template used (for template contracts)"
          },
          "playbook": {
            "type": "string",
            "nullable": true,
            "description": "ID of the playbook used (for playbook contracts)"
          }
        },
        "example": {
          "id": "507f1f77bcf86cd799439011",
          "type": "template",
          "name": "Software License Agreement - Acme Corp",
          "reference": "SLA-2024-001",
          "status": "executed",
          "createdAt": "2024-01-15T10:30:00Z",
          "updatedAt": "2024-01-20T14:45:00Z",
          "finalizedAt": "2024-01-20T14:45:00Z",
          "executedAt": "2024-01-20T15:00:00Z",
          "executionMethod": "docusign",
          "archived": false,
          "deleted": false,
          "aborted": false,
          "final": true,
          "hubRequestStatus": "completed",
          "properties": {
            "licenseType": {
              "value": "Enterprise",
              "meta": {
                "name": "License Type",
                "description": "Type of software license",
                "type": "select",
                "group": "License Details"
              }
            },
            "effectiveDate": {
              "value": "2024-02-01",
              "meta": {
                "name": "Effective Date",
                "description": "When the license becomes active",
                "type": "date",
                "group": "License Details"
              }
            }
          },
          "user": "507f1f77bcf86cd799439012",
          "template": "507f1f77bcf86cd799439013"
        }
      },
      "Template": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the template"
          },
          "name": {
            "type": "string",
            "description": "Name of the template"
          },
          "version": {
            "type": "string",
            "description": "Version number of the template"
          },
          "description": {
            "type": "string",
            "description": "Description of the template purpose and usage"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Template creation timestamp"
          },
          "variables": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "List of variables that can be substituted in the template"
          },
          "valuemaps": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Predefined value mappings for template variables"
          }
        },
        "example": {
          "id": "507f1f77bcf86cd799439013",
          "name": "Software License Agreement Template",
          "version": "2.1.0",
          "description": "Standard template for software licensing agreements with customizable terms",
          "createdAt": "2023-06-15T08:00:00Z",
          "variables": [
            {
              "name": "companyName",
              "type": "text",
              "required": true,
              "description": "Name of the licensing company"
            },
            {
              "name": "licenseType",
              "type": "select",
              "options": [
                "Basic",
                "Professional",
                "Enterprise"
              ],
              "required": true
            }
          ],
          "valuemaps": [
            {
              "name": "pricingTiers",
              "values": {
                "Basic": "$99/month",
                "Professional": "$299/month",
                "Enterprise": "Custom pricing"
              }
            }
          ]
        }
      },
      "ContractListResponse": {
        "type": "object",
        "properties": {
          "contracts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier of the contract"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "template",
                    "playbook",
                    "external"
                  ]
                },
                "name": {
                  "type": "string",
                  "description": "Name of the contract"
                },
                "reference": {
                  "type": "string",
                  "description": "Reference number of the contract"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Contract creation timestamp"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last update timestamp"
                },
                "status": {
                  "type": "string",
                  "description": "Current status of the contract"
                }
              }
            }
          }
        },
        "example": {
          "contracts": [
            {
              "id": "507f1f77bcf86cd799439011",
              "type": "template",
              "name": "Software License Agreement - Acme Corp",
              "reference": "SLA-2024-001",
              "createdAt": "2024-01-15T10:30:00Z",
              "updatedAt": "2024-01-20T14:45:00Z",
              "status": "executed"
            },
            {
              "id": "507f1f77bcf86cd799439014",
              "type": "playbook",
              "name": "Service Agreement - Beta Inc",
              "reference": "SA-2024-002",
              "createdAt": "2024-01-16T09:00:00Z",
              "updatedAt": "2024-01-18T11:30:00Z",
              "status": "draft"
            }
          ]
        }
      },
      "ContractTextResponse": {
        "type": "object",
        "properties": {
          "contractId": {
            "type": "string",
            "description": "ID of the contract"
          },
          "name": {
            "type": "string",
            "description": "Name of the contract"
          },
          "text": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of text segments from the contract"
          }
        },
        "example": {
          "contractId": "507f1f77bcf86cd799439011",
          "name": "Software License Agreement - Acme Corp",
          "text": [
            "SOFTWARE LICENSE AGREEMENT",
            "This Software License Agreement (\"Agreement\") is entered into as of February 1, 2024",
            "between Acme Corporation (\"Licensor\") and Beta Inc (\"Licensee\").",
            "",
            "1. GRANT OF LICENSE",
            "Subject to the terms and conditions of this Agreement, Licensor hereby grants to Licensee",
            "a non-exclusive, non-transferable Enterprise license to use the Software."
          ]
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Bad Request"
          },
          "message": {
            "type": "string",
            "example": "Invalid contract ID format"
          }
        }
      }
    },
    "parameters": {
      "AttributeFilterParam": {
        "in": "query",
        "name": "_*_",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "To filter results based on a particular attribute, specify a query parameter with the same name as the attribute defined on your model. For instance, if our `Purchase` model has an `amount` attribute, we could send `GET /purchase?amount=99.99` to return a list of $99.99 purchases."
      },
      "WhereQueryParam": {
        "in": "query",
        "name": "where",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Instead of filtering based on a specific attribute, you may instead choose to provide a `where` parameter with the WHERE piece of a [Waterline criteria](https://sailsjs.com/documentation/concepts/models-and-orm/query-language), _encoded as a JSON string_. This allows you to take advantage of `contains`, `startsWith`, and other sub-attribute criteria modifiers for more powerful `find()` queries.\n\ne.g. `?where={\"name\":{\"contains\":\"theodore\"}}`"
      },
      "LimitQueryParam": {
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The maximum number of records to send back (useful for pagination). Defaults to 30."
      },
      "SkipQueryParam": {
        "in": "query",
        "name": "skip",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The number of records to skip (useful for pagination)."
      },
      "SortQueryParam": {
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The sort order. By default, returned records are sorted by primary key value in ascending order.\n\ne.g. `?sort=lastName%20ASC`"
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "API key for authentication. Include in all requests as x-api-key header."
      }
    }
  },
  "paths": {
    "/v1/test": {
      "get": {
        "summary": "Test endpoint",
        "description": "Test endpoint to test API connectivity and authentication",
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Test successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/contracts": {
      "get": {
        "summary": "List all contracts",
        "description": "Retrieve a paginated list of contracts accessible to the authenticated user. Supports filtering by type, status, and date ranges.",
        "tags": [
          "Contracts"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of contracts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/templates": {
      "get": {
        "summary": "List all templates",
        "description": "Retrieve all available contract templates that can be used to create new contracts.",
        "tags": [
          "Templates"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of templates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Template"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/contracts/generate": {
      "post": {
        "summary": "Generate contract",
        "description": "Generate a new contract from a template",
        "tags": [
          "Contracts"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Contract generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Contract ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Contract name"
                    },
                    "template": {
                      "type": "string",
                      "description": "Template ID"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/contracts/set-from-values": {
      "post": {
        "summary": "Generate contract set from values",
        "description": "Generate a set of contracts based on provided values",
        "tags": [
          "Contracts"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Contract set generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "contractId": {
                        "type": "string",
                        "description": "Contract ID"
                      },
                      "templateId": {
                        "type": "string",
                        "description": "Template ID"
                      },
                      "templateName": {
                        "type": "string",
                        "description": "Template name"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/contracts/{id}": {
      "get": {
        "summary": "Get contract details",
        "description": "Retrieve detailed information about a specific contract including all properties, metadata, and status information.",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Route pattern variable `id`"
          }
        ],
        "responses": {
          "200": {
            "description": "Contract details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contract"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/contracts/{id}/text": {
      "get": {
        "summary": "Extract contract text",
        "description": "Extract and return the full text content of a contract. Useful for search, analysis, and AI processing.",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "Contract ID (MongoDB ObjectId format)"
          }
        ],
        "responses": {
          "200": {
            "description": "Contract text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractTextResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/contracts/{id}/download": {
      "get": {
        "summary": "Download contract",
        "description": "Download a contract file by ID",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "Contract ID (MongoDB ObjectId format)"
          }
        ],
        "responses": {
          "200": {
            "description": "Contract file download",
            "content": {
              "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  }
}